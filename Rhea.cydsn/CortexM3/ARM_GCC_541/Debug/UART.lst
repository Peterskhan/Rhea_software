ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 7222     		movs	r2, #114
  35 0002 034B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 0022     		movs	r2, #0
  39 0008 0233     		adds	r3, r3, #2
  40 000a 1A70     		strb	r2, [r3]
  41 000c 7047     		bx	lr
  42              	.L3:
  43 000e 00BF     		.align	2
  44              	.L2:
  45 0010 88650040 		.word	1073767816
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 4


  46              		.cfi_endproc
  47              	.LFE1:
  48              		.size	UART_Init, .-UART_Init
  49              		.section	.text.UART_Enable,"ax",%progbits
  50              		.align	2
  51              		.global	UART_Enable
  52              		.thumb
  53              		.thumb_func
  54              		.type	UART_Enable, %function
  55              	UART_Enable:
  56              	.LFB2:
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 5


 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  57              		.loc 1 184 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 10B5     		push	{r4, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  65              		.loc 1 186 0
  66 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  67              	.LVL0:
  68 0006 0446     		mov	r4, r0
  69              	.LVL1:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  70              		.loc 1 190 0
  71 0008 074A     		ldr	r2, .L6
  72 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  73 000c 43F02003 		orr	r3, r3, #32
  74 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  75              		.loc 1 193 0
  76 0012 0232     		adds	r2, r2, #2
  77 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  78 0016 43F01003 		orr	r3, r3, #16
  79 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 6


 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  80              		.loc 1 219 0
  81 001c FFF7FEFF 		bl	UART_IntClock_Start
  82              	.LVL2:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  83              		.loc 1 222 0
  84 0020 2046     		mov	r0, r4
  85 0022 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL3:
  87 0026 10BD     		pop	{r4, pc}
  88              	.LVL4:
  89              	.L7:
  90              		.align	2
  91              	.L6:
  92 0028 98650040 		.word	1073767832
  93              		.cfi_endproc
  94              	.LFE2:
  95              		.size	UART_Enable, .-UART_Enable
  96              		.section	.text.UART_Start,"ax",%progbits
  97              		.align	2
  98              		.global	UART_Start
  99              		.thumb
 100              		.thumb_func
 101              		.type	UART_Start, %function
 102              	UART_Start:
 103              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 104              		.loc 1 77 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 08B5     		push	{r3, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 3, -8
 111              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 112              		.loc 1 79 0
 113 0002 054B     		ldr	r3, .L11
 114 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 115 0006 23B9     		cbnz	r3, .L9
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 116              		.loc 1 81 0
 117 0008 FFF7FEFF 		bl	UART_Init
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 7


 118              	.LVL5:
  82:Generated_Source\PSoC5/UART.c ****     }
 119              		.loc 1 82 0
 120 000c 0122     		movs	r2, #1
 121 000e 024B     		ldr	r3, .L11
 122 0010 1A70     		strb	r2, [r3]
 123              	.L9:
  85:Generated_Source\PSoC5/UART.c **** }
 124              		.loc 1 85 0
 125 0012 FFF7FEFF 		bl	UART_Enable
 126              	.LVL6:
 127 0016 08BD     		pop	{r3, pc}
 128              	.L12:
 129              		.align	2
 130              	.L11:
 131 0018 00000000 		.word	.LANCHOR0
 132              		.cfi_endproc
 133              	.LFE0:
 134              		.size	UART_Start, .-UART_Start
 135              		.section	.text.UART_Stop,"ax",%progbits
 136              		.align	2
 137              		.global	UART_Stop
 138              		.thumb
 139              		.thumb_func
 140              		.type	UART_Stop, %function
 141              	UART_Stop:
 142              	.LFB3:
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 143              		.loc 1 241 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 10B5     		push	{r4, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 151              		.loc 1 243 0
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 8


 152 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL7:
 154 0006 0446     		mov	r4, r0
 155              	.LVL8:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 156              		.loc 1 247 0
 157 0008 074A     		ldr	r2, .L15
 158 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 159 000c 03F0DF03 		and	r3, r3, #223
 160 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 161              		.loc 1 257 0
 162 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 163              	.LVL9:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 164              		.loc 1 262 0
 165 0016 054A     		ldr	r2, .L15+4
 166 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 167 001a 03F0EF03 		and	r3, r3, #239
 168 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 169              		.loc 1 277 0
 170 0020 2046     		mov	r0, r4
 171 0022 FFF7FEFF 		bl	CyExitCriticalSection
 172              	.LVL10:
 173 0026 10BD     		pop	{r4, pc}
 174              	.LVL11:
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 9


 175              	.L16:
 176              		.align	2
 177              	.L15:
 178 0028 98650040 		.word	1073767832
 179 002c 9A650040 		.word	1073767834
 180              		.cfi_endproc
 181              	.LFE3:
 182              		.size	UART_Stop, .-UART_Stop
 183              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 184              		.align	2
 185              		.global	UART_ReadControlRegister
 186              		.thumb
 187              		.thumb_func
 188              		.type	UART_ReadControlRegister, %function
 189              	UART_ReadControlRegister:
 190              	.LFB4:
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 191              		.loc 1 296 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 196              		.loc 1 300 0
 197 0000 014B     		ldr	r3, .L18
 198 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 199              		.loc 1 302 0
 200 0004 7047     		bx	lr
 201              	.L19:
 202 0006 00BF     		.align	2
 203              	.L18:
 204 0008 78640040 		.word	1073767544
 205              		.cfi_endproc
 206              	.LFE4:
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 10


 207              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 208              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 209              		.align	2
 210              		.global	UART_WriteControlRegister
 211              		.thumb
 212              		.thumb_func
 213              		.type	UART_WriteControlRegister, %function
 214              	UART_WriteControlRegister:
 215              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 216              		.loc 1 320 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221              	.LVL12:
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 222              		.loc 1 327 0
 223 0000 014B     		ldr	r3, .L21
 224 0002 1870     		strb	r0, [r3]
 225 0004 7047     		bx	lr
 226              	.L22:
 227 0006 00BF     		.align	2
 228              	.L21:
 229 0008 78640040 		.word	1073767544
 230              		.cfi_endproc
 231              	.LFE5:
 232              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 233              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 234              		.align	2
 235              		.global	UART_SetRxInterruptMode
 236              		.thumb
 237              		.thumb_func
 238              		.type	UART_SetRxInterruptMode, %function
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 11


 239              	UART_SetRxInterruptMode:
 240              	.LFB6:
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 241              		.loc 1 360 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL13:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 247              		.loc 1 361 0
 248 0000 014B     		ldr	r3, .L24
 249 0002 1870     		strb	r0, [r3]
 250 0004 7047     		bx	lr
 251              	.L25:
 252 0006 00BF     		.align	2
 253              	.L24:
 254 0008 8A650040 		.word	1073767818
 255              		.cfi_endproc
 256              	.LFE6:
 257              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 258              		.section	.text.UART_ReadRxData,"ax",%progbits
 259              		.align	2
 260              		.global	UART_ReadRxData
 261              		.thumb
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 12


 262              		.thumb_func
 263              		.type	UART_ReadRxData, %function
 264              	UART_ReadRxData:
 265              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 266              		.loc 1 393 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 13


 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 271              		.loc 1 448 0
 272 0000 014B     		ldr	r3, .L27
 273 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 274              	.LVL14:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 275              		.loc 1 453 0
 276 0004 7047     		bx	lr
 277              	.L28:
 278 0006 00BF     		.align	2
 279              	.L27:
 280 0008 49650040 		.word	1073767753
 281              		.cfi_endproc
 282              	.LFE7:
 283              		.size	UART_ReadRxData, .-UART_ReadRxData
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 14


 284              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 285              		.align	2
 286              		.global	UART_ReadRxStatus
 287              		.thumb
 288              		.thumb_func
 289              		.type	UART_ReadRxStatus, %function
 290              	UART_ReadRxStatus:
 291              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 292              		.loc 1 486 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 297              		.loc 1 489 0
 298 0000 024B     		ldr	r3, .L30
 299 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 300              	.LVL15:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 15


 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 301              		.loc 1 500 0
 302 0004 00F07F00 		and	r0, r0, #127
 303              	.LVL16:
 304 0008 7047     		bx	lr
 305              	.L31:
 306 000a 00BF     		.align	2
 307              	.L30:
 308 000c 6A650040 		.word	1073767786
 309              		.cfi_endproc
 310              	.LFE8:
 311              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 312              		.section	.text.UART_GetChar,"ax",%progbits
 313              		.align	2
 314              		.global	UART_GetChar
 315              		.thumb
 316              		.thumb_func
 317              		.type	UART_GetChar, %function
 318              	UART_GetChar:
 319              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 16


 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 320              		.loc 1 533 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL17:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 17


 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 326              		.loc 1 596 0
 327 0000 084B     		ldr	r3, .L36
 328 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 329 0004 DBB2     		uxtb	r3, r3
 330              	.LVL18:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 331              		.loc 1 597 0
 332 0006 13F0200F 		tst	r3, #32
 333 000a 06D0     		beq	.L34
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 334              		.loc 1 600 0
 335 000c 064A     		ldr	r2, .L36+4
 336 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 337 0010 C0B2     		uxtb	r0, r0
 338              	.LVL19:
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 339              		.loc 1 603 0
 340 0012 13F01E0F 		tst	r3, #30
 341 0016 02D1     		bne	.L35
 342 0018 7047     		bx	lr
 343              	.LVL20:
 344              	.L34:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 345              		.loc 1 534 0
 346 001a 0020     		movs	r0, #0
 347 001c 7047     		bx	lr
 348              	.LVL21:
 349              	.L35:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 350              		.loc 1 606 0
 351 001e 0020     		movs	r0, #0
 352              	.LVL22:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 18


 612:Generated_Source\PSoC5/UART.c ****     }
 353              		.loc 1 612 0
 354 0020 7047     		bx	lr
 355              	.L37:
 356 0022 00BF     		.align	2
 357              	.L36:
 358 0024 6A650040 		.word	1073767786
 359 0028 49650040 		.word	1073767753
 360              		.cfi_endproc
 361              	.LFE9:
 362              		.size	UART_GetChar, .-UART_GetChar
 363              		.section	.text.UART_GetByte,"ax",%progbits
 364              		.align	2
 365              		.global	UART_GetByte
 366              		.thumb
 367              		.thumb_func
 368              		.type	UART_GetByte, %function
 369              	UART_GetByte:
 370              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 371              		.loc 1 635 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 10B5     		push	{r4, lr}
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 4, -8
 378              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 19


 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 379              		.loc 1 646 0
 380 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 381              	.LVL23:
 382 0006 0402     		lsls	r4, r0, #8
 383 0008 FFF7FEFF 		bl	UART_ReadRxData
 384              	.LVL24:
 385 000c 2043     		orrs	r0, r0, r4
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 386              		.loc 1 649 0
 387 000e 80B2     		uxth	r0, r0
 388 0010 10BD     		pop	{r4, pc}
 389              		.cfi_endproc
 390              	.LFE10:
 391              		.size	UART_GetByte, .-UART_GetByte
 392 0012 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 393              		.align	2
 394              		.global	UART_GetRxBufferSize
 395              		.thumb
 396              		.thumb_func
 397              		.type	UART_GetRxBufferSize, %function
 398              	UART_GetRxBufferSize:
 399              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 20


 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 400              		.loc 1 685 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 405              		.loc 1 718 0
 406 0000 044B     		ldr	r3, .L43
 407 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0004 13F0200F 		tst	r3, #32
 409 0008 01D0     		beq	.L42
 410 000a 0120     		movs	r0, #1
 411 000c 7047     		bx	lr
 412              	.L42:
 413 000e 0020     		movs	r0, #0
 414              	.LVL25:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 21


 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 415              		.loc 1 723 0
 416 0010 7047     		bx	lr
 417              	.L44:
 418 0012 00BF     		.align	2
 419              	.L43:
 420 0014 6A650040 		.word	1073767786
 421              		.cfi_endproc
 422              	.LFE11:
 423              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 424              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 425              		.align	2
 426              		.global	UART_ClearRxBuffer
 427              		.thumb
 428              		.thumb_func
 429              		.type	UART_ClearRxBuffer, %function
 430              	UART_ClearRxBuffer:
 431              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 432              		.loc 1 758 0
 433              		.cfi_startproc
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 22


 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436 0000 08B5     		push	{r3, lr}
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 3, -8
 439              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 440              		.loc 1 762 0
 441 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 442              	.LVL26:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 443              		.loc 1 763 0
 444 0006 064B     		ldr	r3, .L47
 445 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 446 000a 42F00102 		orr	r2, r2, #1
 447 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 448              		.loc 1 764 0
 449 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 450 0012 02F0FE02 		and	r2, r2, #254
 451 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 452              		.loc 1 765 0
 453 0018 FFF7FEFF 		bl	CyExitCriticalSection
 454              	.LVL27:
 455 001c 08BD     		pop	{r3, pc}
 456              	.L48:
 457 001e 00BF     		.align	2
 458              	.L47:
 459 0020 99650040 		.word	1073767833
 460              		.cfi_endproc
 461              	.LFE12:
 462              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 463              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 464              		.align	2
 465              		.global	UART_SetRxAddressMode
 466              		.thumb
 467              		.thumb_func
 468              		.type	UART_SetRxAddressMode, %function
 469              	UART_SetRxAddressMode:
 470              	.LFB13:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 23


 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 471              		.loc 1 815 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476              	.LVL28:
 477 0000 7047     		bx	lr
 478              		.cfi_endproc
 479              	.LFE13:
 480              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 481 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 482              		.align	2
 483              		.global	UART_SetRxAddress1
 484              		.thumb
 485              		.thumb_func
 486              		.type	UART_SetRxAddress1, %function
 487              	UART_SetRxAddress1:
 488              	.LFB14:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 24


 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 489              		.loc 1 858 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL29:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 495              		.loc 1 859 0
 496 0000 014B     		ldr	r3, .L51
 497 0002 1870     		strb	r0, [r3]
 498 0004 7047     		bx	lr
 499              	.L52:
 500 0006 00BF     		.align	2
 501              	.L51:
 502 0008 29650040 		.word	1073767721
 503              		.cfi_endproc
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 25


 504              	.LFE14:
 505              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 506              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 507              		.align	2
 508              		.global	UART_SetRxAddress2
 509              		.thumb
 510              		.thumb_func
 511              		.type	UART_SetRxAddress2, %function
 512              	UART_SetRxAddress2:
 513              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 514              		.loc 1 878 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519              	.LVL30:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 520              		.loc 1 879 0
 521 0000 014B     		ldr	r3, .L54
 522 0002 1870     		strb	r0, [r3]
 523 0004 7047     		bx	lr
 524              	.L55:
 525 0006 00BF     		.align	2
 526              	.L54:
 527 0008 39650040 		.word	1073767737
 528              		.cfi_endproc
 529              	.LFE15:
 530              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 531              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 532              		.align	2
 533              		.global	UART_SetTxInterruptMode
 534              		.thumb
 535              		.thumb_func
 536              		.type	UART_SetTxInterruptMode, %function
 537              	UART_SetTxInterruptMode:
 538              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 26


 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 539              		.loc 1 909 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544              	.LVL31:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 545              		.loc 1 910 0
 546 0000 014B     		ldr	r3, .L57
 547 0002 1870     		strb	r0, [r3]
 548 0004 7047     		bx	lr
 549              	.L58:
 550 0006 00BF     		.align	2
 551              	.L57:
 552 0008 8A650040 		.word	1073767818
 553              		.cfi_endproc
 554              	.LFE16:
 555              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 556              		.section	.text.UART_WriteTxData,"ax",%progbits
 557              		.align	2
 558              		.global	UART_WriteTxData
 559              		.thumb
 560              		.thumb_func
 561              		.type	UART_WriteTxData, %function
 562              	UART_WriteTxData:
 563              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 27


 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 564              		.loc 1 943 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL32:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 570              		.loc 1 945 0
 571 0000 024B     		ldr	r3, .L61
 572 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 573 0004 0BB1     		cbz	r3, .L59
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 28


 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 574              		.loc 1 976 0
 575 0006 024B     		ldr	r3, .L61+4
 576 0008 1870     		strb	r0, [r3]
 577              	.L59:
 578 000a 7047     		bx	lr
 579              	.L62:
 580              		.align	2
 581              	.L61:
 582 000c 00000000 		.word	.LANCHOR0
 583 0010 59650040 		.word	1073767769
 584              		.cfi_endproc
 585              	.LFE17:
 586              		.size	UART_WriteTxData, .-UART_WriteTxData
 587              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 588              		.align	2
 589              		.global	UART_ReadTxStatus
 590              		.thumb
 591              		.thumb_func
 592              		.type	UART_ReadTxStatus, %function
 593              	UART_ReadTxStatus:
 594              	.LFB18:
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 29


 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 595              		.loc 1 1004 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 600              		.loc 1 1005 0
 601 0000 014B     		ldr	r3, .L64
 602 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 603              		.loc 1 1006 0
 604 0004 7047     		bx	lr
 605              	.L65:
 606 0006 00BF     		.align	2
 607              	.L64:
 608 0008 6A650040 		.word	1073767786
 609              		.cfi_endproc
 610              	.LFE18:
 611              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 612              		.section	.text.UART_PutChar,"ax",%progbits
 613              		.align	2
 614              		.global	UART_PutChar
 615              		.thumb
 616              		.thumb_func
 617              		.type	UART_PutChar, %function
 618              	UART_PutChar:
 619              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 30


1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 620              		.loc 1 1042 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625              	.LVL33:
 626              	.L67:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 31


1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 627              		.loc 1 1107 0 discriminator 1
 628 0000 034B     		ldr	r3, .L68
 629 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 0004 13F0200F 		tst	r3, #32
 631 0008 FAD1     		bne	.L67
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 632              		.loc 1 1113 0
 633 000a 024B     		ldr	r3, .L68+4
 634 000c 1870     		strb	r0, [r3]
 635 000e 7047     		bx	lr
 636              	.L69:
 637              		.align	2
 638              	.L68:
 639 0010 6A650040 		.word	1073767786
 640 0014 59650040 		.word	1073767769
 641              		.cfi_endproc
 642              	.LFE19:
 643              		.size	UART_PutChar, .-UART_PutChar
 644              		.section	.text.UART_PutString,"ax",%progbits
 645              		.align	2
 646              		.global	UART_PutString
 647              		.thumb
 648              		.thumb_func
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 32


 649              		.type	UART_PutString, %function
 650              	UART_PutString:
 651              	.LFB20:
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 652              		.loc 1 1146 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              	.LVL34:
 657 0000 38B5     		push	{r3, r4, r5, lr}
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 3, -16
 660              		.cfi_offset 4, -12
 661              		.cfi_offset 5, -8
 662              		.cfi_offset 14, -4
 663              	.LVL35:
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 664              		.loc 1 1150 0
 665 0002 074B     		ldr	r3, .L76
 666 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 667 0006 2BB9     		cbnz	r3, .L74
 668 0008 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 33


 669              	.LVL36:
 670              	.L73:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 671              		.loc 1 1155 0
 672 000a FFF7FEFF 		bl	UART_PutChar
 673              	.LVL37:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 674              		.loc 1 1156 0
 675 000e 0134     		adds	r4, r4, #1
 676              	.LVL38:
 677 0010 A4B2     		uxth	r4, r4
 678              	.LVL39:
 679 0012 01E0     		b	.L71
 680              	.LVL40:
 681              	.L74:
 682 0014 0546     		mov	r5, r0
 683 0016 0024     		movs	r4, #0
 684              	.LVL41:
 685              	.L71:
1153:Generated_Source\PSoC5/UART.c ****             {
 686              		.loc 1 1153 0
 687 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 688 001a 0028     		cmp	r0, #0
 689 001c F5D1     		bne	.L73
 690 001e 38BD     		pop	{r3, r4, r5, pc}
 691              	.LVL42:
 692              	.L77:
 693              		.align	2
 694              	.L76:
 695 0020 00000000 		.word	.LANCHOR0
 696              		.cfi_endproc
 697              	.LFE20:
 698              		.size	UART_PutString, .-UART_PutString
 699              		.section	.text.UART_PutArray,"ax",%progbits
 700              		.align	2
 701              		.global	UART_PutArray
 702              		.thumb
 703              		.thumb_func
 704              		.type	UART_PutArray, %function
 705              	UART_PutArray:
 706              	.LFB21:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 34


1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 707              		.loc 1 1193 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              	.LVL43:
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 712              		.loc 1 1197 0
 713 0000 084B     		ldr	r3, .L84
 714 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 715 0004 33B9     		cbnz	r3, .L82
 716 0006 7047     		bx	lr
 717              	.LVL44:
 718              	.L81:
 719              		.cfi_def_cfa_offset 16
 720              		.cfi_offset 4, -16
 721              		.cfi_offset 5, -12
 722              		.cfi_offset 6, -8
 723              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 724              		.loc 1 1201 0
 725 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 726 000a FFF7FEFF 		bl	UART_PutChar
 727              	.LVL45:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 728              		.loc 1 1202 0
 729 000e 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 35


 730              	.LVL46:
 731 0010 E4B2     		uxtb	r4, r4
 732              	.LVL47:
 733 0012 03E0     		b	.L79
 734              	.LVL48:
 735              	.L82:
 736              		.cfi_def_cfa_offset 0
 737              		.cfi_restore 4
 738              		.cfi_restore 5
 739              		.cfi_restore 6
 740              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 741              		.loc 1 1193 0
 742 0014 70B5     		push	{r4, r5, r6, lr}
 743              		.cfi_def_cfa_offset 16
 744              		.cfi_offset 4, -16
 745              		.cfi_offset 5, -12
 746              		.cfi_offset 6, -8
 747              		.cfi_offset 14, -4
 748 0016 0D46     		mov	r5, r1
 749 0018 0646     		mov	r6, r0
 750 001a 0024     		movs	r4, #0
 751              	.LVL49:
 752              	.L79:
1199:Generated_Source\PSoC5/UART.c ****             {
 753              		.loc 1 1199 0
 754 001c AC42     		cmp	r4, r5
 755 001e F3D3     		bcc	.L81
 756 0020 70BD     		pop	{r4, r5, r6, pc}
 757              	.LVL50:
 758              	.L85:
 759 0022 00BF     		.align	2
 760              	.L84:
 761 0024 00000000 		.word	.LANCHOR0
 762              		.cfi_endproc
 763              	.LFE21:
 764              		.size	UART_PutArray, .-UART_PutArray
 765              		.section	.text.UART_PutCRLF,"ax",%progbits
 766              		.align	2
 767              		.global	UART_PutCRLF
 768              		.thumb
 769              		.thumb_func
 770              		.type	UART_PutCRLF, %function
 771              	UART_PutCRLF:
 772              	.LFB22:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 36


1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 773              		.loc 1 1231 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL51:
 778 0000 08B5     		push	{r3, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 3, -8
 781              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 782              		.loc 1 1233 0
 783 0002 064B     		ldr	r3, .L89
 784 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 0006 3BB1     		cbz	r3, .L86
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 786              		.loc 1 1235 0
 787 0008 FFF7FEFF 		bl	UART_PutChar
 788              	.LVL52:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 789              		.loc 1 1236 0
 790 000c 0D20     		movs	r0, #13
 791 000e FFF7FEFF 		bl	UART_PutChar
 792              	.LVL53:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 793              		.loc 1 1237 0
 794 0012 0A20     		movs	r0, #10
 795 0014 FFF7FEFF 		bl	UART_PutChar
 796              	.LVL54:
 797              	.L86:
 798 0018 08BD     		pop	{r3, pc}
 799              	.L90:
 800 001a 00BF     		.align	2
 801              	.L89:
 802 001c 00000000 		.word	.LANCHOR0
 803              		.cfi_endproc
 804              	.LFE22:
 805              		.size	UART_PutCRLF, .-UART_PutCRLF
 806              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 37


 807              		.align	2
 808              		.global	UART_GetTxBufferSize
 809              		.thumb
 810              		.thumb_func
 811              		.type	UART_GetTxBufferSize, %function
 812              	UART_GetTxBufferSize:
 813              	.LFB23:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 814              		.loc 1 1275 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 38


1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 819              		.loc 1 1301 0
 820 0000 074B     		ldr	r3, .L95
 821 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 822 0004 DBB2     		uxtb	r3, r3
 823              	.LVL55:
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 824              		.loc 1 1304 0
 825 0006 13F0200F 		tst	r3, #32
 826 000a 04D1     		bne	.L93
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 827              		.loc 1 1308 0
 828 000c 13F0020F 		tst	r3, #2
 829 0010 03D0     		beq	.L94
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
 830              		.loc 1 1310 0
 831 0012 0020     		movs	r0, #0
 832 0014 7047     		bx	lr
 833              	.L93:
1306:Generated_Source\PSoC5/UART.c ****         }
 834              		.loc 1 1306 0
 835 0016 0420     		movs	r0, #4
 836 0018 7047     		bx	lr
 837              	.L94:
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
 838              		.loc 1 1315 0
 839 001a 0120     		movs	r0, #1
 840              	.LVL56:
1316:Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 39


1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 841              		.loc 1 1321 0
 842 001c 7047     		bx	lr
 843              	.L96:
 844 001e 00BF     		.align	2
 845              	.L95:
 846 0020 6A650040 		.word	1073767786
 847              		.cfi_endproc
 848              	.LFE23:
 849              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 850              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 851              		.align	2
 852              		.global	UART_ClearTxBuffer
 853              		.thumb
 854              		.thumb_func
 855              		.type	UART_ClearTxBuffer, %function
 856              	UART_ClearTxBuffer:
 857              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 858              		.loc 1 1355 0
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 40


 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862 0000 08B5     		push	{r3, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 3, -8
 865              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 866              		.loc 1 1358 0
 867 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 868              	.LVL57:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 869              		.loc 1 1360 0
 870 0006 064B     		ldr	r3, .L99
 871 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 872 000a 42F00202 		orr	r2, r2, #2
 873 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 874              		.loc 1 1361 0
 875 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 876 0012 02F0FD02 		and	r2, r2, #253
 877 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 878              		.loc 1 1362 0
 879 0018 FFF7FEFF 		bl	CyExitCriticalSection
 880              	.LVL58:
 881 001c 08BD     		pop	{r3, pc}
 882              	.L100:
 883 001e 00BF     		.align	2
 884              	.L99:
 885 0020 99650040 		.word	1073767833
 886              		.cfi_endproc
 887              	.LFE24:
 888              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 889              		.section	.text.UART_SendBreak,"ax",%progbits
 890              		.align	2
 891              		.global	UART_SendBreak
 892              		.thumb
 893              		.thumb_func
 894              		.type	UART_SendBreak, %function
 895              	UART_SendBreak:
 896              	.LFB25:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 41


1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 42


1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 897              		.loc 1 1441 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL59:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 902              		.loc 1 1444 0
 903 0000 154B     		ldr	r3, .L110
 904 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0004 3BB3     		cbz	r3, .L109
1441:Generated_Source\PSoC5/UART.c **** 
 906              		.loc 1 1441 0
 907 0006 10B5     		push	{r4, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 911 0008 0446     		mov	r4, r0
 912              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 913              		.loc 1 1452 0
 914 000a 08B1     		cbz	r0, .L103
 915              		.loc 1 1452 0 is_stmt 0 discriminator 1
 916 000c 0328     		cmp	r0, #3
 917 000e 0ED1     		bne	.L104
 918              	.L103:
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
 919              		.loc 1 1456 0 is_stmt 1
 920 0010 FFF7FEFF 		bl	UART_ReadControlRegister
 921              	.LVL60:
 922 0014 40F00200 		orr	r0, r0, #2
 923 0018 C0B2     		uxtb	r0, r0
 924 001a FFF7FEFF 		bl	UART_WriteControlRegister
 925              	.LVL61:
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 43


1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 926              		.loc 1 1459 0
 927 001e 0022     		movs	r2, #0
 928 0020 0E4B     		ldr	r3, .L110+4
 929 0022 1A70     		strb	r2, [r3]
 930              	.L105:
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 931              		.loc 1 1463 0 discriminator 1
 932 0024 0E4B     		ldr	r3, .L110+8
 933 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 934              	.LVL62:
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 935              		.loc 1 1465 0 discriminator 1
 936 0028 13F0020F 		tst	r3, #2
 937 002c FAD1     		bne	.L105
 938              	.LVL63:
 939              	.L104:
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 940              		.loc 1 1468 0
 941 002e 012C     		cmp	r4, #1
 942 0030 01D0     		beq	.L106
 943              		.loc 1 1468 0 is_stmt 0 discriminator 1
 944 0032 032C     		cmp	r4, #3
 945 0034 04D1     		bne	.L107
 946              	.L106:
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 947              		.loc 1 1473 0 is_stmt 1 discriminator 1
 948 0036 0A4B     		ldr	r3, .L110+8
 949 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 950              	.LVL64:
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 951              		.loc 1 1475 0 discriminator 1
 952 003a 13F0010F 		tst	r3, #1
 953 003e FAD0     		beq	.L106
 954              	.LVL65:
 955              	.L107:
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 956              		.loc 1 1479 0
 957 0040 013C     		subs	r4, r4, #1
 958 0042 E4B2     		uxtb	r4, r4
1478:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 959              		.loc 1 1478 0
 960 0044 022C     		cmp	r4, #2
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 44


 961 0046 05D8     		bhi	.L101
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
 962              		.loc 1 1482 0
 963 0048 FFF7FEFF 		bl	UART_ReadControlRegister
 964              	.LVL66:
 965 004c 00F0FD00 		and	r0, r0, #253
 966 0050 FFF7FEFF 		bl	UART_WriteControlRegister
 967              	.LVL67:
 968              	.L101:
 969 0054 10BD     		pop	{r4, pc}
 970              	.LVL68:
 971              	.L109:
 972              		.cfi_def_cfa_offset 0
 973              		.cfi_restore 4
 974              		.cfi_restore 14
 975 0056 7047     		bx	lr
 976              	.L111:
 977              		.align	2
 978              	.L110:
 979 0058 00000000 		.word	.LANCHOR0
 980 005c 59650040 		.word	1073767769
 981 0060 6A650040 		.word	1073767786
 982              	.LBE2:
 983              		.cfi_endproc
 984              	.LFE25:
 985              		.size	UART_SendBreak, .-UART_SendBreak
 986              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 987              		.align	2
 988              		.global	UART_SetTxAddressMode
 989              		.thumb
 990              		.thumb_func
 991              		.type	UART_SetTxAddressMode, %function
 992              	UART_SetTxAddressMode:
 993              	.LFB26:
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
1503:Generated_Source\PSoC5/UART.c ****                 #else
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 45


1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 46


1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 994              		.loc 1 1573 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              	.LVL69:
 999 0000 08B5     		push	{r3, lr}
 1000              		.cfi_def_cfa_offset 8
 1001              		.cfi_offset 3, -8
 1002              		.cfi_offset 14, -4
1574:Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
 1003              		.loc 1 1575 0
 1004 0002 38B1     		cbz	r0, .L113
1576:Generated_Source\PSoC5/UART.c ****         {
1577:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
 1005              		.loc 1 1578 0
 1006 0004 FFF7FEFF 		bl	UART_ReadControlRegister
 1007              	.LVL70:
 1008 0008 40F00400 		orr	r0, r0, #4
 1009 000c C0B2     		uxtb	r0, r0
 1010 000e FFF7FEFF 		bl	UART_WriteControlRegister
 1011              	.LVL71:
 1012 0012 08BD     		pop	{r3, pc}
 1013              	.LVL72:
 1014              	.L113:
1579:Generated_Source\PSoC5/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART.c ****         }
1582:Generated_Source\PSoC5/UART.c ****         else
1583:Generated_Source\PSoC5/UART.c ****         {
1584:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
 1015              		.loc 1 1585 0
 1016 0014 FFF7FEFF 		bl	UART_ReadControlRegister
 1017              	.LVL73:
 1018 0018 00F0FB00 		and	r0, r0, #251
 1019 001c FFF7FEFF 		bl	UART_WriteControlRegister
 1020              	.LVL74:
 1021 0020 08BD     		pop	{r3, pc}
 1022              		.cfi_endproc
 1023              	.LFE26:
 1024              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1025 0022 00BF     		.section	.text.UART_LoadRxConfig,"ax",%progbits
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 47


 1026              		.align	2
 1027              		.global	UART_LoadRxConfig
 1028              		.thumb
 1029              		.thumb_func
 1030              		.type	UART_LoadRxConfig, %function
 1031              	UART_LoadRxConfig:
 1032              	.LFB27:
1586:Generated_Source\PSoC5/UART.c ****                                                   (uint8) ~UART_CTRL_MARK);
1587:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART.c ****         }
1589:Generated_Source\PSoC5/UART.c ****     }
1590:Generated_Source\PSoC5/UART.c **** 
1591:Generated_Source\PSoC5/UART.c **** #endif  /* EndUART_TX_ENABLED */
1592:Generated_Source\PSoC5/UART.c **** 
1593:Generated_Source\PSoC5/UART.c **** #if(UART_HD_ENABLED)
1594:Generated_Source\PSoC5/UART.c **** 
1595:Generated_Source\PSoC5/UART.c **** 
1596:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1597:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_LoadRxConfig
1598:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1599:Generated_Source\PSoC5/UART.c ****     *
1600:Generated_Source\PSoC5/UART.c ****     * Summary:
1601:Generated_Source\PSoC5/UART.c ****     *  Loads the receiver configuration in half duplex mode. After calling this
1602:Generated_Source\PSoC5/UART.c ****     *  function, the UART is ready to receive data.
1603:Generated_Source\PSoC5/UART.c ****     *
1604:Generated_Source\PSoC5/UART.c ****     * Parameters:
1605:Generated_Source\PSoC5/UART.c ****     *  None.
1606:Generated_Source\PSoC5/UART.c ****     *
1607:Generated_Source\PSoC5/UART.c ****     * Return:
1608:Generated_Source\PSoC5/UART.c ****     *  None.
1609:Generated_Source\PSoC5/UART.c ****     *
1610:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1611:Generated_Source\PSoC5/UART.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1612:Generated_Source\PSoC5/UART.c ****     *  transaction is complete and it is safe to unload the transmitter
1613:Generated_Source\PSoC5/UART.c ****     *  configuration.
1614:Generated_Source\PSoC5/UART.c ****     *
1615:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1616:Generated_Source\PSoC5/UART.c ****     void UART_LoadRxConfig(void) 
1617:Generated_Source\PSoC5/UART.c ****     {
 1033              		.loc 1 1617 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 08B5     		push	{r3, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 3, -8
 1040              		.cfi_offset 14, -4
1618:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister(UART_ReadControlRegister() &
 1041              		.loc 1 1618 0
 1042 0002 FFF7FEFF 		bl	UART_ReadControlRegister
 1043              	.LVL75:
 1044 0006 00F0FE00 		and	r0, r0, #254
 1045 000a FFF7FEFF 		bl	UART_WriteControlRegister
 1046              	.LVL76:
1619:Generated_Source\PSoC5/UART.c ****                                                 (uint8)~UART_CTRL_HD_SEND);
1620:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_HD_RXBITCTR_INIT;
 1047              		.loc 1 1620 0
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 48


 1048 000e 7222     		movs	r2, #114
 1049 0010 014B     		ldr	r3, .L118
 1050 0012 1A70     		strb	r2, [r3]
 1051 0014 08BD     		pop	{r3, pc}
 1052              	.L119:
 1053 0016 00BF     		.align	2
 1054              	.L118:
 1055 0018 88650040 		.word	1073767816
 1056              		.cfi_endproc
 1057              	.LFE27:
 1058              		.size	UART_LoadRxConfig, .-UART_LoadRxConfig
 1059              		.section	.text.UART_LoadTxConfig,"ax",%progbits
 1060              		.align	2
 1061              		.global	UART_LoadTxConfig
 1062              		.thumb
 1063              		.thumb_func
 1064              		.type	UART_LoadTxConfig, %function
 1065              	UART_LoadTxConfig:
 1066              	.LFB28:
1621:Generated_Source\PSoC5/UART.c **** 
1622:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
1623:Generated_Source\PSoC5/UART.c ****         /* Enable RX interrupt after set RX configuration */
1624:Generated_Source\PSoC5/UART.c ****         UART_SetRxInterruptMode(UART_INIT_RX_INTERRUPTS_MASK);
1625:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
1626:Generated_Source\PSoC5/UART.c ****     }
1627:Generated_Source\PSoC5/UART.c **** 
1628:Generated_Source\PSoC5/UART.c **** 
1629:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1630:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_LoadTxConfig
1631:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1632:Generated_Source\PSoC5/UART.c ****     *
1633:Generated_Source\PSoC5/UART.c ****     * Summary:
1634:Generated_Source\PSoC5/UART.c ****     *  Loads the transmitter configuration in half duplex mode. After calling this
1635:Generated_Source\PSoC5/UART.c ****     *  function, the UART is ready to transmit data.
1636:Generated_Source\PSoC5/UART.c ****     *
1637:Generated_Source\PSoC5/UART.c ****     * Parameters:
1638:Generated_Source\PSoC5/UART.c ****     *  None.
1639:Generated_Source\PSoC5/UART.c ****     *
1640:Generated_Source\PSoC5/UART.c ****     * Return:
1641:Generated_Source\PSoC5/UART.c ****     *  None.
1642:Generated_Source\PSoC5/UART.c ****     *
1643:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1644:Generated_Source\PSoC5/UART.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1645:Generated_Source\PSoC5/UART.c ****     *  transaction is complete and it is safe to unload the receiver configuration.
1646:Generated_Source\PSoC5/UART.c ****     *
1647:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1648:Generated_Source\PSoC5/UART.c ****     void UART_LoadTxConfig(void) 
1649:Generated_Source\PSoC5/UART.c ****     {
 1067              		.loc 1 1649 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071 0000 08B5     		push	{r3, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 3, -8
 1074              		.cfi_offset 14, -4
1650:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 49


1651:Generated_Source\PSoC5/UART.c ****         /* Disable RX interrupts before set TX configuration */
1652:Generated_Source\PSoC5/UART.c ****         UART_SetRxInterruptMode(0u);
1653:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
1654:Generated_Source\PSoC5/UART.c **** 
1655:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister(UART_ReadControlRegister() | UART_CTRL_HD_SEND);
 1075              		.loc 1 1655 0
 1076 0002 FFF7FEFF 		bl	UART_ReadControlRegister
 1077              	.LVL77:
 1078 0006 40F00100 		orr	r0, r0, #1
 1079 000a C0B2     		uxtb	r0, r0
 1080 000c FFF7FEFF 		bl	UART_WriteControlRegister
 1081              	.LVL78:
1656:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_HD_TXBITCTR_INIT;
 1082              		.loc 1 1656 0
 1083 0010 6F22     		movs	r2, #111
 1084 0012 014B     		ldr	r3, .L122
 1085 0014 1A70     		strb	r2, [r3]
 1086 0016 08BD     		pop	{r3, pc}
 1087              	.L123:
 1088              		.align	2
 1089              	.L122:
 1090 0018 88650040 		.word	1073767816
 1091              		.cfi_endproc
 1092              	.LFE28:
 1093              		.size	UART_LoadTxConfig, .-UART_LoadTxConfig
 1094              		.global	UART_initVar
 1095              		.bss
 1096              		.set	.LANCHOR0,. + 0
 1097              		.type	UART_initVar, %object
 1098              		.size	UART_initVar, 1
 1099              	UART_initVar:
 1100 0000 00       		.space	1
 1101              		.text
 1102              	.Letext0:
 1103              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1104              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1105              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1106              		.section	.debug_info,"",%progbits
 1107              	.Ldebug_info0:
 1108 0000 92060000 		.4byte	0x692
 1109 0004 0400     		.2byte	0x4
 1110 0006 00000000 		.4byte	.Ldebug_abbrev0
 1111 000a 04       		.byte	0x4
 1112 000b 01       		.uleb128 0x1
 1113 000c B7020000 		.4byte	.LASF65
 1114 0010 0C       		.byte	0xc
 1115 0011 31020000 		.4byte	.LASF66
 1116 0015 4F030000 		.4byte	.LASF67
 1117 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1118 001d 00000000 		.4byte	0
 1119 0021 00000000 		.4byte	.Ldebug_line0
 1120 0025 02       		.uleb128 0x2
 1121 0026 01       		.byte	0x1
 1122 0027 06       		.byte	0x6
 1123 0028 77000000 		.4byte	.LASF0
 1124 002c 02       		.uleb128 0x2
 1125 002d 01       		.byte	0x1
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 50


 1126 002e 08       		.byte	0x8
 1127 002f 7F020000 		.4byte	.LASF1
 1128 0033 02       		.uleb128 0x2
 1129 0034 02       		.byte	0x2
 1130 0035 05       		.byte	0x5
 1131 0036 9E020000 		.4byte	.LASF2
 1132 003a 02       		.uleb128 0x2
 1133 003b 02       		.byte	0x2
 1134 003c 07       		.byte	0x7
 1135 003d 6B010000 		.4byte	.LASF3
 1136 0041 02       		.uleb128 0x2
 1137 0042 04       		.byte	0x4
 1138 0043 05       		.byte	0x5
 1139 0044 83000000 		.4byte	.LASF4
 1140 0048 02       		.uleb128 0x2
 1141 0049 04       		.byte	0x4
 1142 004a 07       		.byte	0x7
 1143 004b 2F010000 		.4byte	.LASF5
 1144 004f 02       		.uleb128 0x2
 1145 0050 08       		.byte	0x8
 1146 0051 05       		.byte	0x5
 1147 0052 69000000 		.4byte	.LASF6
 1148 0056 02       		.uleb128 0x2
 1149 0057 08       		.byte	0x8
 1150 0058 07       		.byte	0x7
 1151 0059 2F000000 		.4byte	.LASF7
 1152 005d 03       		.uleb128 0x3
 1153 005e 04       		.byte	0x4
 1154 005f 05       		.byte	0x5
 1155 0060 696E7400 		.ascii	"int\000"
 1156 0064 02       		.uleb128 0x2
 1157 0065 04       		.byte	0x4
 1158 0066 07       		.byte	0x7
 1159 0067 02010000 		.4byte	.LASF8
 1160 006b 04       		.uleb128 0x4
 1161 006c A9000000 		.4byte	.LASF9
 1162 0070 02       		.byte	0x2
 1163 0071 E401     		.2byte	0x1e4
 1164 0073 2C000000 		.4byte	0x2c
 1165 0077 04       		.uleb128 0x4
 1166 0078 00000000 		.4byte	.LASF10
 1167 007c 02       		.byte	0x2
 1168 007d E501     		.2byte	0x1e5
 1169 007f 3A000000 		.4byte	0x3a
 1170 0083 02       		.uleb128 0x2
 1171 0084 04       		.byte	0x4
 1172 0085 04       		.byte	0x4
 1173 0086 39040000 		.4byte	.LASF11
 1174 008a 02       		.uleb128 0x2
 1175 008b 08       		.byte	0x8
 1176 008c 04       		.byte	0x4
 1177 008d C8000000 		.4byte	.LASF12
 1178 0091 04       		.uleb128 0x4
 1179 0092 B8030000 		.4byte	.LASF13
 1180 0096 02       		.byte	0x2
 1181 0097 F501     		.2byte	0x1f5
 1182 0099 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 51


 1183 009d 02       		.uleb128 0x2
 1184 009e 01       		.byte	0x1
 1185 009f 08       		.byte	0x8
 1186 00a0 B3030000 		.4byte	.LASF14
 1187 00a4 04       		.uleb128 0x4
 1188 00a5 64020000 		.4byte	.LASF15
 1189 00a9 02       		.byte	0x2
 1190 00aa 8E02     		.2byte	0x28e
 1191 00ac B0000000 		.4byte	0xb0
 1192 00b0 05       		.uleb128 0x5
 1193 00b1 6B000000 		.4byte	0x6b
 1194 00b5 02       		.uleb128 0x2
 1195 00b6 08       		.byte	0x8
 1196 00b7 04       		.byte	0x4
 1197 00b8 DB010000 		.4byte	.LASF16
 1198 00bc 02       		.uleb128 0x2
 1199 00bd 04       		.byte	0x4
 1200 00be 07       		.byte	0x7
 1201 00bf D2010000 		.4byte	.LASF17
 1202 00c3 06       		.uleb128 0x6
 1203 00c4 E3000000 		.4byte	.LASF68
 1204 00c8 01       		.byte	0x1
 1205 00c9 6A       		.byte	0x6a
 1206 00ca 00000000 		.4byte	.LFB1
 1207 00ce 14000000 		.4byte	.LFE1-.LFB1
 1208 00d2 01       		.uleb128 0x1
 1209 00d3 9C       		.byte	0x9c
 1210 00d4 07       		.uleb128 0x7
 1211 00d5 83030000 		.4byte	.LASF18
 1212 00d9 01       		.byte	0x1
 1213 00da B7       		.byte	0xb7
 1214 00db 00000000 		.4byte	.LFB2
 1215 00df 2C000000 		.4byte	.LFE2-.LFB2
 1216 00e3 01       		.uleb128 0x1
 1217 00e4 9C       		.byte	0x9c
 1218 00e5 1B010000 		.4byte	0x11b
 1219 00e9 08       		.uleb128 0x8
 1220 00ea F5030000 		.4byte	.LASF21
 1221 00ee 01       		.byte	0x1
 1222 00ef B9       		.byte	0xb9
 1223 00f0 6B000000 		.4byte	0x6b
 1224 00f4 00000000 		.4byte	.LLST0
 1225 00f8 09       		.uleb128 0x9
 1226 00f9 06000000 		.4byte	.LVL0
 1227 00fd 69060000 		.4byte	0x669
 1228 0101 09       		.uleb128 0x9
 1229 0102 20000000 		.4byte	.LVL2
 1230 0106 74060000 		.4byte	0x674
 1231 010a 0A       		.uleb128 0xa
 1232 010b 26000000 		.4byte	.LVL3
 1233 010f 7F060000 		.4byte	0x67f
 1234 0113 0B       		.uleb128 0xb
 1235 0114 01       		.uleb128 0x1
 1236 0115 50       		.byte	0x50
 1237 0116 02       		.uleb128 0x2
 1238 0117 74       		.byte	0x74
 1239 0118 00       		.sleb128 0
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 52


 1240 0119 00       		.byte	0
 1241 011a 00       		.byte	0
 1242 011b 07       		.uleb128 0x7
 1243 011c 46000000 		.4byte	.LASF19
 1244 0120 01       		.byte	0x1
 1245 0121 4C       		.byte	0x4c
 1246 0122 00000000 		.4byte	.LFB0
 1247 0126 1C000000 		.4byte	.LFE0-.LFB0
 1248 012a 01       		.uleb128 0x1
 1249 012b 9C       		.byte	0x9c
 1250 012c 43010000 		.4byte	0x143
 1251 0130 09       		.uleb128 0x9
 1252 0131 0C000000 		.4byte	.LVL5
 1253 0135 C3000000 		.4byte	0xc3
 1254 0139 09       		.uleb128 0x9
 1255 013a 16000000 		.4byte	.LVL6
 1256 013e D4000000 		.4byte	0xd4
 1257 0142 00       		.byte	0
 1258 0143 07       		.uleb128 0x7
 1259 0144 2F040000 		.4byte	.LASF20
 1260 0148 01       		.byte	0x1
 1261 0149 F0       		.byte	0xf0
 1262 014a 00000000 		.4byte	.LFB3
 1263 014e 30000000 		.4byte	.LFE3-.LFB3
 1264 0152 01       		.uleb128 0x1
 1265 0153 9C       		.byte	0x9c
 1266 0154 8A010000 		.4byte	0x18a
 1267 0158 08       		.uleb128 0x8
 1268 0159 F5030000 		.4byte	.LASF21
 1269 015d 01       		.byte	0x1
 1270 015e F2       		.byte	0xf2
 1271 015f 6B000000 		.4byte	0x6b
 1272 0163 13000000 		.4byte	.LLST1
 1273 0167 09       		.uleb128 0x9
 1274 0168 06000000 		.4byte	.LVL7
 1275 016c 69060000 		.4byte	0x669
 1276 0170 09       		.uleb128 0x9
 1277 0171 16000000 		.4byte	.LVL9
 1278 0175 8A060000 		.4byte	0x68a
 1279 0179 0A       		.uleb128 0xa
 1280 017a 26000000 		.4byte	.LVL10
 1281 017e 7F060000 		.4byte	0x67f
 1282 0182 0B       		.uleb128 0xb
 1283 0183 01       		.uleb128 0x1
 1284 0184 50       		.byte	0x50
 1285 0185 02       		.uleb128 0x2
 1286 0186 74       		.byte	0x74
 1287 0187 00       		.sleb128 0
 1288 0188 00       		.byte	0
 1289 0189 00       		.byte	0
 1290 018a 0C       		.uleb128 0xc
 1291 018b AF000000 		.4byte	.LASF44
 1292 018f 01       		.byte	0x1
 1293 0190 2701     		.2byte	0x127
 1294 0192 6B000000 		.4byte	0x6b
 1295 0196 00000000 		.4byte	.LFB4
 1296 019a 0C000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 53


 1297 019e 01       		.uleb128 0x1
 1298 019f 9C       		.byte	0x9c
 1299 01a0 0D       		.uleb128 0xd
 1300 01a1 4E040000 		.4byte	.LASF22
 1301 01a5 01       		.byte	0x1
 1302 01a6 3F01     		.2byte	0x13f
 1303 01a8 00000000 		.4byte	.LFB5
 1304 01ac 0C000000 		.4byte	.LFE5-.LFB5
 1305 01b0 01       		.uleb128 0x1
 1306 01b1 9C       		.byte	0x9c
 1307 01b2 C5010000 		.4byte	0x1c5
 1308 01b6 0E       		.uleb128 0xe
 1309 01b7 DB000000 		.4byte	.LASF24
 1310 01bb 01       		.byte	0x1
 1311 01bc 3F01     		.2byte	0x13f
 1312 01be 6B000000 		.4byte	0x6b
 1313 01c2 01       		.uleb128 0x1
 1314 01c3 50       		.byte	0x50
 1315 01c4 00       		.byte	0
 1316 01c5 0D       		.uleb128 0xd
 1317 01c6 BE030000 		.4byte	.LASF23
 1318 01ca 01       		.byte	0x1
 1319 01cb 6701     		.2byte	0x167
 1320 01cd 00000000 		.4byte	.LFB6
 1321 01d1 0C000000 		.4byte	.LFE6-.LFB6
 1322 01d5 01       		.uleb128 0x1
 1323 01d6 9C       		.byte	0x9c
 1324 01d7 EA010000 		.4byte	0x1ea
 1325 01db 0E       		.uleb128 0xe
 1326 01dc 87010000 		.4byte	.LASF25
 1327 01e0 01       		.byte	0x1
 1328 01e1 6701     		.2byte	0x167
 1329 01e3 6B000000 		.4byte	0x6b
 1330 01e7 01       		.uleb128 0x1
 1331 01e8 50       		.byte	0x50
 1332 01e9 00       		.byte	0
 1333 01ea 0F       		.uleb128 0xf
 1334 01eb 99000000 		.4byte	.LASF27
 1335 01ef 01       		.byte	0x1
 1336 01f0 8801     		.2byte	0x188
 1337 01f2 6B000000 		.4byte	0x6b
 1338 01f6 00000000 		.4byte	.LFB7
 1339 01fa 0C000000 		.4byte	.LFE7-.LFB7
 1340 01fe 01       		.uleb128 0x1
 1341 01ff 9C       		.byte	0x9c
 1342 0200 13020000 		.4byte	0x213
 1343 0204 10       		.uleb128 0x10
 1344 0205 7C030000 		.4byte	.LASF26
 1345 0209 01       		.byte	0x1
 1346 020a 8A01     		.2byte	0x18a
 1347 020c 6B000000 		.4byte	0x6b
 1348 0210 01       		.uleb128 0x1
 1349 0211 50       		.byte	0x50
 1350 0212 00       		.byte	0
 1351 0213 0F       		.uleb128 0xf
 1352 0214 A1030000 		.4byte	.LASF28
 1353 0218 01       		.byte	0x1
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 54


 1354 0219 E501     		.2byte	0x1e5
 1355 021b 6B000000 		.4byte	0x6b
 1356 021f 00000000 		.4byte	.LFB8
 1357 0223 10000000 		.4byte	.LFE8-.LFB8
 1358 0227 01       		.uleb128 0x1
 1359 0228 9C       		.byte	0x9c
 1360 0229 3E020000 		.4byte	0x23e
 1361 022d 11       		.uleb128 0x11
 1362 022e 28040000 		.4byte	.LASF29
 1363 0232 01       		.byte	0x1
 1364 0233 E701     		.2byte	0x1e7
 1365 0235 6B000000 		.4byte	0x6b
 1366 0239 26000000 		.4byte	.LLST2
 1367 023d 00       		.byte	0
 1368 023e 0F       		.uleb128 0xf
 1369 023f D6030000 		.4byte	.LASF30
 1370 0243 01       		.byte	0x1
 1371 0244 1402     		.2byte	0x214
 1372 0246 6B000000 		.4byte	0x6b
 1373 024a 00000000 		.4byte	.LFB9
 1374 024e 2C000000 		.4byte	.LFE9-.LFB9
 1375 0252 01       		.uleb128 0x1
 1376 0253 9C       		.byte	0x9c
 1377 0254 77020000 		.4byte	0x277
 1378 0258 11       		.uleb128 0x11
 1379 0259 7C030000 		.4byte	.LASF26
 1380 025d 01       		.byte	0x1
 1381 025e 1602     		.2byte	0x216
 1382 0260 6B000000 		.4byte	0x6b
 1383 0264 3E000000 		.4byte	.LLST3
 1384 0268 10       		.uleb128 0x10
 1385 0269 15020000 		.4byte	.LASF31
 1386 026d 01       		.byte	0x1
 1387 026e 1702     		.2byte	0x217
 1388 0270 6B000000 		.4byte	0x6b
 1389 0274 01       		.uleb128 0x1
 1390 0275 53       		.byte	0x53
 1391 0276 00       		.byte	0
 1392 0277 0F       		.uleb128 0xf
 1393 0278 F5000000 		.4byte	.LASF32
 1394 027c 01       		.byte	0x1
 1395 027d 7A02     		.2byte	0x27a
 1396 027f 77000000 		.4byte	0x77
 1397 0283 00000000 		.4byte	.LFB10
 1398 0287 12000000 		.4byte	.LFE10-.LFB10
 1399 028b 01       		.uleb128 0x1
 1400 028c 9C       		.byte	0x9c
 1401 028d A4020000 		.4byte	0x2a4
 1402 0291 09       		.uleb128 0x9
 1403 0292 06000000 		.4byte	.LVL23
 1404 0296 13020000 		.4byte	0x213
 1405 029a 09       		.uleb128 0x9
 1406 029b 0C000000 		.4byte	.LVL24
 1407 029f EA010000 		.4byte	0x1ea
 1408 02a3 00       		.byte	0
 1409 02a4 0F       		.uleb128 0xf
 1410 02a5 13040000 		.4byte	.LASF33
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 55


 1411 02a9 01       		.byte	0x1
 1412 02aa AB02     		.2byte	0x2ab
 1413 02ac 6B000000 		.4byte	0x6b
 1414 02b0 00000000 		.4byte	.LFB11
 1415 02b4 18000000 		.4byte	.LFE11-.LFB11
 1416 02b8 01       		.uleb128 0x1
 1417 02b9 9C       		.byte	0x9c
 1418 02ba CD020000 		.4byte	0x2cd
 1419 02be 10       		.uleb128 0x10
 1420 02bf 66010000 		.4byte	.LASF34
 1421 02c3 01       		.byte	0x1
 1422 02c4 AE02     		.2byte	0x2ae
 1423 02c6 6B000000 		.4byte	0x6b
 1424 02ca 01       		.uleb128 0x1
 1425 02cb 50       		.byte	0x50
 1426 02cc 00       		.byte	0
 1427 02cd 0D       		.uleb128 0xd
 1428 02ce 68040000 		.4byte	.LASF35
 1429 02d2 01       		.byte	0x1
 1430 02d3 F502     		.2byte	0x2f5
 1431 02d5 00000000 		.4byte	.LFB12
 1432 02d9 24000000 		.4byte	.LFE12-.LFB12
 1433 02dd 01       		.uleb128 0x1
 1434 02de 9C       		.byte	0x9c
 1435 02df 06030000 		.4byte	0x306
 1436 02e3 11       		.uleb128 0x11
 1437 02e4 F5030000 		.4byte	.LASF21
 1438 02e8 01       		.byte	0x1
 1439 02e9 F702     		.2byte	0x2f7
 1440 02eb 6B000000 		.4byte	0x6b
 1441 02ef 74000000 		.4byte	.LLST4
 1442 02f3 09       		.uleb128 0x9
 1443 02f4 06000000 		.4byte	.LVL26
 1444 02f8 69060000 		.4byte	0x669
 1445 02fc 09       		.uleb128 0x9
 1446 02fd 1C000000 		.4byte	.LVL27
 1447 0301 7F060000 		.4byte	0x67f
 1448 0305 00       		.byte	0
 1449 0306 0D       		.uleb128 0xd
 1450 0307 69020000 		.4byte	.LASF36
 1451 030b 01       		.byte	0x1
 1452 030c 2D03     		.2byte	0x32d
 1453 030e 00000000 		.4byte	.LFB13
 1454 0312 02000000 		.4byte	.LFE13-.LFB13
 1455 0316 01       		.uleb128 0x1
 1456 0317 9C       		.byte	0x9c
 1457 0318 2B030000 		.4byte	0x32b
 1458 031c 0E       		.uleb128 0xe
 1459 031d CF000000 		.4byte	.LASF37
 1460 0321 01       		.byte	0x1
 1461 0322 2D03     		.2byte	0x32d
 1462 0324 6B000000 		.4byte	0x6b
 1463 0328 01       		.uleb128 0x1
 1464 0329 50       		.byte	0x50
 1465 032a 00       		.byte	0
 1466 032b 0D       		.uleb128 0xd
 1467 032c EF010000 		.4byte	.LASF38
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 56


 1468 0330 01       		.byte	0x1
 1469 0331 5903     		.2byte	0x359
 1470 0333 00000000 		.4byte	.LFB14
 1471 0337 0C000000 		.4byte	.LFE14-.LFB14
 1472 033b 01       		.uleb128 0x1
 1473 033c 9C       		.byte	0x9c
 1474 033d 50030000 		.4byte	0x350
 1475 0341 0E       		.uleb128 0xe
 1476 0342 E7010000 		.4byte	.LASF39
 1477 0346 01       		.byte	0x1
 1478 0347 5903     		.2byte	0x359
 1479 0349 6B000000 		.4byte	0x6b
 1480 034d 01       		.uleb128 0x1
 1481 034e 50       		.byte	0x50
 1482 034f 00       		.byte	0
 1483 0350 0D       		.uleb128 0xd
 1484 0351 02020000 		.4byte	.LASF40
 1485 0355 01       		.byte	0x1
 1486 0356 6D03     		.2byte	0x36d
 1487 0358 00000000 		.4byte	.LFB15
 1488 035c 0C000000 		.4byte	.LFE15-.LFB15
 1489 0360 01       		.uleb128 0x1
 1490 0361 9C       		.byte	0x9c
 1491 0362 75030000 		.4byte	0x375
 1492 0366 0E       		.uleb128 0xe
 1493 0367 E7010000 		.4byte	.LASF39
 1494 036b 01       		.byte	0x1
 1495 036c 6D03     		.2byte	0x36d
 1496 036e 6B000000 		.4byte	0x6b
 1497 0372 01       		.uleb128 0x1
 1498 0373 50       		.byte	0x50
 1499 0374 00       		.byte	0
 1500 0375 0D       		.uleb128 0xd
 1501 0376 51000000 		.4byte	.LASF41
 1502 037a 01       		.byte	0x1
 1503 037b 8C03     		.2byte	0x38c
 1504 037d 00000000 		.4byte	.LFB16
 1505 0381 0C000000 		.4byte	.LFE16-.LFB16
 1506 0385 01       		.uleb128 0x1
 1507 0386 9C       		.byte	0x9c
 1508 0387 9A030000 		.4byte	0x39a
 1509 038b 0E       		.uleb128 0xe
 1510 038c 87010000 		.4byte	.LASF25
 1511 0390 01       		.byte	0x1
 1512 0391 8C03     		.2byte	0x38c
 1513 0393 6B000000 		.4byte	0x6b
 1514 0397 01       		.uleb128 0x1
 1515 0398 50       		.byte	0x50
 1516 0399 00       		.byte	0
 1517 039a 0D       		.uleb128 0xd
 1518 039b 8D020000 		.4byte	.LASF42
 1519 039f 01       		.byte	0x1
 1520 03a0 AE03     		.2byte	0x3ae
 1521 03a2 00000000 		.4byte	.LFB17
 1522 03a6 14000000 		.4byte	.LFE17-.LFB17
 1523 03aa 01       		.uleb128 0x1
 1524 03ab 9C       		.byte	0x9c
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 57


 1525 03ac BF030000 		.4byte	0x3bf
 1526 03b0 0E       		.uleb128 0xe
 1527 03b1 1D000000 		.4byte	.LASF43
 1528 03b5 01       		.byte	0x1
 1529 03b6 AE03     		.2byte	0x3ae
 1530 03b8 6B000000 		.4byte	0x6b
 1531 03bc 01       		.uleb128 0x1
 1532 03bd 50       		.byte	0x50
 1533 03be 00       		.byte	0
 1534 03bf 0C       		.uleb128 0xc
 1535 03c0 A4010000 		.4byte	.LASF45
 1536 03c4 01       		.byte	0x1
 1537 03c5 EB03     		.2byte	0x3eb
 1538 03c7 6B000000 		.4byte	0x6b
 1539 03cb 00000000 		.4byte	.LFB18
 1540 03cf 0C000000 		.4byte	.LFE18-.LFB18
 1541 03d3 01       		.uleb128 0x1
 1542 03d4 9C       		.byte	0x9c
 1543 03d5 0D       		.uleb128 0xd
 1544 03d6 8C000000 		.4byte	.LASF46
 1545 03da 01       		.byte	0x1
 1546 03db 1104     		.2byte	0x411
 1547 03dd 00000000 		.4byte	.LFB19
 1548 03e1 18000000 		.4byte	.LFE19-.LFB19
 1549 03e5 01       		.uleb128 0x1
 1550 03e6 9C       		.byte	0x9c
 1551 03e7 FA030000 		.4byte	0x3fa
 1552 03eb 0E       		.uleb128 0xe
 1553 03ec 1D000000 		.4byte	.LASF43
 1554 03f0 01       		.byte	0x1
 1555 03f1 1104     		.2byte	0x411
 1556 03f3 6B000000 		.4byte	0x6b
 1557 03f7 01       		.uleb128 0x1
 1558 03f8 50       		.byte	0x50
 1559 03f9 00       		.byte	0
 1560 03fa 0D       		.uleb128 0xd
 1561 03fb 3F040000 		.4byte	.LASF47
 1562 03ff 01       		.byte	0x1
 1563 0400 7904     		.2byte	0x479
 1564 0402 00000000 		.4byte	.LFB20
 1565 0406 24000000 		.4byte	.LFE20-.LFB20
 1566 040a 01       		.uleb128 0x1
 1567 040b 9C       		.byte	0x9c
 1568 040c 3A040000 		.4byte	0x43a
 1569 0410 12       		.uleb128 0x12
 1570 0411 28000000 		.4byte	.LASF48
 1571 0415 01       		.byte	0x1
 1572 0416 7904     		.2byte	0x479
 1573 0418 3A040000 		.4byte	0x43a
 1574 041c 87000000 		.4byte	.LLST5
 1575 0420 11       		.uleb128 0x11
 1576 0421 7E010000 		.4byte	.LASF49
 1577 0425 01       		.byte	0x1
 1578 0426 7B04     		.2byte	0x47b
 1579 0428 77000000 		.4byte	0x77
 1580 042c C9000000 		.4byte	.LLST6
 1581 0430 09       		.uleb128 0x9
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 58


 1582 0431 0E000000 		.4byte	.LVL37
 1583 0435 D5030000 		.4byte	0x3d5
 1584 0439 00       		.byte	0
 1585 043a 13       		.uleb128 0x13
 1586 043b 04       		.byte	0x4
 1587 043c 40040000 		.4byte	0x440
 1588 0440 14       		.uleb128 0x14
 1589 0441 91000000 		.4byte	0x91
 1590 0445 0D       		.uleb128 0xd
 1591 0446 41010000 		.4byte	.LASF50
 1592 044a 01       		.byte	0x1
 1593 044b A704     		.2byte	0x4a7
 1594 044d 00000000 		.4byte	.LFB21
 1595 0451 28000000 		.4byte	.LFE21-.LFB21
 1596 0455 01       		.uleb128 0x1
 1597 0456 9C       		.byte	0x9c
 1598 0457 95040000 		.4byte	0x495
 1599 045b 12       		.uleb128 0x12
 1600 045c 28000000 		.4byte	.LASF48
 1601 0460 01       		.byte	0x1
 1602 0461 A704     		.2byte	0x4a7
 1603 0463 95040000 		.4byte	0x495
 1604 0467 0A010000 		.4byte	.LLST7
 1605 046b 12       		.uleb128 0x12
 1606 046c 45030000 		.4byte	.LASF51
 1607 0470 01       		.byte	0x1
 1608 0471 A704     		.2byte	0x4a7
 1609 0473 6B000000 		.4byte	0x6b
 1610 0477 4C010000 		.4byte	.LLST8
 1611 047b 11       		.uleb128 0x11
 1612 047c 7E010000 		.4byte	.LASF49
 1613 0480 01       		.byte	0x1
 1614 0481 AA04     		.2byte	0x4aa
 1615 0483 6B000000 		.4byte	0x6b
 1616 0487 86010000 		.4byte	.LLST9
 1617 048b 09       		.uleb128 0x9
 1618 048c 0E000000 		.4byte	.LVL45
 1619 0490 D5030000 		.4byte	0x3d5
 1620 0494 00       		.byte	0
 1621 0495 13       		.uleb128 0x13
 1622 0496 04       		.byte	0x4
 1623 0497 9B040000 		.4byte	0x49b
 1624 049b 14       		.uleb128 0x14
 1625 049c 6B000000 		.4byte	0x6b
 1626 04a0 0D       		.uleb128 0xd
 1627 04a1 22010000 		.4byte	.LASF52
 1628 04a5 01       		.byte	0x1
 1629 04a6 CE04     		.2byte	0x4ce
 1630 04a8 00000000 		.4byte	.LFB22
 1631 04ac 20000000 		.4byte	.LFE22-.LFB22
 1632 04b0 01       		.uleb128 0x1
 1633 04b1 9C       		.byte	0x9c
 1634 04b2 F2040000 		.4byte	0x4f2
 1635 04b6 12       		.uleb128 0x12
 1636 04b7 1D000000 		.4byte	.LASF43
 1637 04bb 01       		.byte	0x1
 1638 04bc CE04     		.2byte	0x4ce
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 59


 1639 04be 6B000000 		.4byte	0x6b
 1640 04c2 C7010000 		.4byte	.LLST10
 1641 04c6 09       		.uleb128 0x9
 1642 04c7 0C000000 		.4byte	.LVL52
 1643 04cb D5030000 		.4byte	0x3d5
 1644 04cf 15       		.uleb128 0x15
 1645 04d0 12000000 		.4byte	.LVL53
 1646 04d4 D5030000 		.4byte	0x3d5
 1647 04d8 E2040000 		.4byte	0x4e2
 1648 04dc 0B       		.uleb128 0xb
 1649 04dd 01       		.uleb128 0x1
 1650 04de 50       		.byte	0x50
 1651 04df 01       		.uleb128 0x1
 1652 04e0 3D       		.byte	0x3d
 1653 04e1 00       		.byte	0
 1654 04e2 0A       		.uleb128 0xa
 1655 04e3 18000000 		.4byte	.LVL54
 1656 04e7 D5030000 		.4byte	0x3d5
 1657 04eb 0B       		.uleb128 0xb
 1658 04ec 01       		.uleb128 0x1
 1659 04ed 50       		.byte	0x50
 1660 04ee 01       		.uleb128 0x1
 1661 04ef 3A       		.byte	0x3a
 1662 04f0 00       		.byte	0
 1663 04f1 00       		.byte	0
 1664 04f2 0F       		.uleb128 0xf
 1665 04f3 4F020000 		.4byte	.LASF53
 1666 04f7 01       		.byte	0x1
 1667 04f8 F904     		.2byte	0x4f9
 1668 04fa 6B000000 		.4byte	0x6b
 1669 04fe 00000000 		.4byte	.LFB23
 1670 0502 24000000 		.4byte	.LFE23-.LFB23
 1671 0506 01       		.uleb128 0x1
 1672 0507 9C       		.byte	0x9c
 1673 0508 1D050000 		.4byte	0x51d
 1674 050c 11       		.uleb128 0x11
 1675 050d 66010000 		.4byte	.LASF34
 1676 0511 01       		.byte	0x1
 1677 0512 FC04     		.2byte	0x4fc
 1678 0514 6B000000 		.4byte	0x6b
 1679 0518 E8010000 		.4byte	.LLST11
 1680 051c 00       		.byte	0
 1681 051d 0D       		.uleb128 0xd
 1682 051e 0F010000 		.4byte	.LASF54
 1683 0522 01       		.byte	0x1
 1684 0523 4A05     		.2byte	0x54a
 1685 0525 00000000 		.4byte	.LFB24
 1686 0529 24000000 		.4byte	.LFE24-.LFB24
 1687 052d 01       		.uleb128 0x1
 1688 052e 9C       		.byte	0x9c
 1689 052f 56050000 		.4byte	0x556
 1690 0533 11       		.uleb128 0x11
 1691 0534 F5030000 		.4byte	.LASF21
 1692 0538 01       		.byte	0x1
 1693 0539 4C05     		.2byte	0x54c
 1694 053b 6B000000 		.4byte	0x6b
 1695 053f 06020000 		.4byte	.LLST12
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 60


 1696 0543 09       		.uleb128 0x9
 1697 0544 06000000 		.4byte	.LVL57
 1698 0548 69060000 		.4byte	0x669
 1699 054c 09       		.uleb128 0x9
 1700 054d 1C000000 		.4byte	.LVL58
 1701 0551 7F060000 		.4byte	0x67f
 1702 0555 00       		.byte	0
 1703 0556 0D       		.uleb128 0xd
 1704 0557 A8020000 		.4byte	.LASF55
 1705 055b 01       		.byte	0x1
 1706 055c A005     		.2byte	0x5a0
 1707 055e 00000000 		.4byte	.LFB25
 1708 0562 64000000 		.4byte	.LFE25-.LFB25
 1709 0566 01       		.uleb128 0x1
 1710 0567 9C       		.byte	0x9c
 1711 0568 BB050000 		.4byte	0x5bb
 1712 056c 12       		.uleb128 0x12
 1713 056d ED000000 		.4byte	.LASF56
 1714 0571 01       		.byte	0x1
 1715 0572 A005     		.2byte	0x5a0
 1716 0574 6B000000 		.4byte	0x6b
 1717 0578 19020000 		.4byte	.LLST13
 1718 057c 16       		.uleb128 0x16
 1719 057d 0A000000 		.4byte	.LBB2
 1720 0581 5A000000 		.4byte	.LBE2-.LBB2
 1721 0585 11       		.uleb128 0x11
 1722 0586 CA010000 		.4byte	.LASF57
 1723 058a 01       		.byte	0x1
 1724 058b A805     		.2byte	0x5a8
 1725 058d 6B000000 		.4byte	0x6b
 1726 0591 45020000 		.4byte	.LLST14
 1727 0595 09       		.uleb128 0x9
 1728 0596 14000000 		.4byte	.LVL60
 1729 059a 8A010000 		.4byte	0x18a
 1730 059e 09       		.uleb128 0x9
 1731 059f 1E000000 		.4byte	.LVL61
 1732 05a3 A0010000 		.4byte	0x1a0
 1733 05a7 09       		.uleb128 0x9
 1734 05a8 4C000000 		.4byte	.LVL66
 1735 05ac 8A010000 		.4byte	0x18a
 1736 05b0 09       		.uleb128 0x9
 1737 05b1 54000000 		.4byte	.LVL67
 1738 05b5 A0010000 		.4byte	0x1a0
 1739 05b9 00       		.byte	0
 1740 05ba 00       		.byte	0
 1741 05bb 0D       		.uleb128 0xd
 1742 05bc 8E010000 		.4byte	.LASF58
 1743 05c0 01       		.byte	0x1
 1744 05c1 2406     		.2byte	0x624
 1745 05c3 00000000 		.4byte	.LFB26
 1746 05c7 22000000 		.4byte	.LFE26-.LFB26
 1747 05cb 01       		.uleb128 0x1
 1748 05cc 9C       		.byte	0x9c
 1749 05cd 06060000 		.4byte	0x606
 1750 05d1 12       		.uleb128 0x12
 1751 05d2 CF000000 		.4byte	.LASF37
 1752 05d6 01       		.byte	0x1
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 61


 1753 05d7 2406     		.2byte	0x624
 1754 05d9 6B000000 		.4byte	0x6b
 1755 05dd 63020000 		.4byte	.LLST15
 1756 05e1 09       		.uleb128 0x9
 1757 05e2 08000000 		.4byte	.LVL70
 1758 05e6 8A010000 		.4byte	0x18a
 1759 05ea 09       		.uleb128 0x9
 1760 05eb 12000000 		.4byte	.LVL71
 1761 05ef A0010000 		.4byte	0x1a0
 1762 05f3 09       		.uleb128 0x9
 1763 05f4 18000000 		.4byte	.LVL73
 1764 05f8 8A010000 		.4byte	0x18a
 1765 05fc 09       		.uleb128 0x9
 1766 05fd 20000000 		.4byte	.LVL74
 1767 0601 A0010000 		.4byte	0x1a0
 1768 0605 00       		.byte	0
 1769 0606 0D       		.uleb128 0xd
 1770 0607 8F030000 		.4byte	.LASF59
 1771 060b 01       		.byte	0x1
 1772 060c 5006     		.2byte	0x650
 1773 060e 00000000 		.4byte	.LFB27
 1774 0612 1C000000 		.4byte	.LFE27-.LFB27
 1775 0616 01       		.uleb128 0x1
 1776 0617 9C       		.byte	0x9c
 1777 0618 2F060000 		.4byte	0x62f
 1778 061c 09       		.uleb128 0x9
 1779 061d 06000000 		.4byte	.LVL75
 1780 0621 8A010000 		.4byte	0x18a
 1781 0625 09       		.uleb128 0x9
 1782 0626 0E000000 		.4byte	.LVL76
 1783 062a A0010000 		.4byte	0x1a0
 1784 062e 00       		.byte	0
 1785 062f 0D       		.uleb128 0xd
 1786 0630 E3030000 		.4byte	.LASF60
 1787 0634 01       		.byte	0x1
 1788 0635 7006     		.2byte	0x670
 1789 0637 00000000 		.4byte	.LFB28
 1790 063b 1C000000 		.4byte	.LFE28-.LFB28
 1791 063f 01       		.uleb128 0x1
 1792 0640 9C       		.byte	0x9c
 1793 0641 58060000 		.4byte	0x658
 1794 0645 09       		.uleb128 0x9
 1795 0646 06000000 		.4byte	.LVL77
 1796 064a 8A010000 		.4byte	0x18a
 1797 064e 09       		.uleb128 0x9
 1798 064f 10000000 		.4byte	.LVL78
 1799 0653 A0010000 		.4byte	0x1a0
 1800 0657 00       		.byte	0
 1801 0658 17       		.uleb128 0x17
 1802 0659 06040000 		.4byte	.LASF69
 1803 065d 01       		.byte	0x1
 1804 065e 1B       		.byte	0x1b
 1805 065f 6B000000 		.4byte	0x6b
 1806 0663 05       		.uleb128 0x5
 1807 0664 03       		.byte	0x3
 1808 0665 00000000 		.4byte	UART_initVar
 1809 0669 18       		.uleb128 0x18
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 62


 1810 066a 4F010000 		.4byte	.LASF61
 1811 066e 4F010000 		.4byte	.LASF61
 1812 0672 03       		.byte	0x3
 1813 0673 7D       		.byte	0x7d
 1814 0674 18       		.uleb128 0x18
 1815 0675 B6010000 		.4byte	.LASF62
 1816 0679 B6010000 		.4byte	.LASF62
 1817 067d 04       		.byte	0x4
 1818 067e 27       		.byte	0x27
 1819 067f 18       		.uleb128 0x18
 1820 0680 07000000 		.4byte	.LASF63
 1821 0684 07000000 		.4byte	.LASF63
 1822 0688 03       		.byte	0x3
 1823 0689 7E       		.byte	0x7e
 1824 068a 18       		.uleb128 0x18
 1825 068b 1E020000 		.4byte	.LASF64
 1826 068f 1E020000 		.4byte	.LASF64
 1827 0693 04       		.byte	0x4
 1828 0694 28       		.byte	0x28
 1829 0695 00       		.byte	0
 1830              		.section	.debug_abbrev,"",%progbits
 1831              	.Ldebug_abbrev0:
 1832 0000 01       		.uleb128 0x1
 1833 0001 11       		.uleb128 0x11
 1834 0002 01       		.byte	0x1
 1835 0003 25       		.uleb128 0x25
 1836 0004 0E       		.uleb128 0xe
 1837 0005 13       		.uleb128 0x13
 1838 0006 0B       		.uleb128 0xb
 1839 0007 03       		.uleb128 0x3
 1840 0008 0E       		.uleb128 0xe
 1841 0009 1B       		.uleb128 0x1b
 1842 000a 0E       		.uleb128 0xe
 1843 000b 55       		.uleb128 0x55
 1844 000c 17       		.uleb128 0x17
 1845 000d 11       		.uleb128 0x11
 1846 000e 01       		.uleb128 0x1
 1847 000f 10       		.uleb128 0x10
 1848 0010 17       		.uleb128 0x17
 1849 0011 00       		.byte	0
 1850 0012 00       		.byte	0
 1851 0013 02       		.uleb128 0x2
 1852 0014 24       		.uleb128 0x24
 1853 0015 00       		.byte	0
 1854 0016 0B       		.uleb128 0xb
 1855 0017 0B       		.uleb128 0xb
 1856 0018 3E       		.uleb128 0x3e
 1857 0019 0B       		.uleb128 0xb
 1858 001a 03       		.uleb128 0x3
 1859 001b 0E       		.uleb128 0xe
 1860 001c 00       		.byte	0
 1861 001d 00       		.byte	0
 1862 001e 03       		.uleb128 0x3
 1863 001f 24       		.uleb128 0x24
 1864 0020 00       		.byte	0
 1865 0021 0B       		.uleb128 0xb
 1866 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 63


 1867 0023 3E       		.uleb128 0x3e
 1868 0024 0B       		.uleb128 0xb
 1869 0025 03       		.uleb128 0x3
 1870 0026 08       		.uleb128 0x8
 1871 0027 00       		.byte	0
 1872 0028 00       		.byte	0
 1873 0029 04       		.uleb128 0x4
 1874 002a 16       		.uleb128 0x16
 1875 002b 00       		.byte	0
 1876 002c 03       		.uleb128 0x3
 1877 002d 0E       		.uleb128 0xe
 1878 002e 3A       		.uleb128 0x3a
 1879 002f 0B       		.uleb128 0xb
 1880 0030 3B       		.uleb128 0x3b
 1881 0031 05       		.uleb128 0x5
 1882 0032 49       		.uleb128 0x49
 1883 0033 13       		.uleb128 0x13
 1884 0034 00       		.byte	0
 1885 0035 00       		.byte	0
 1886 0036 05       		.uleb128 0x5
 1887 0037 35       		.uleb128 0x35
 1888 0038 00       		.byte	0
 1889 0039 49       		.uleb128 0x49
 1890 003a 13       		.uleb128 0x13
 1891 003b 00       		.byte	0
 1892 003c 00       		.byte	0
 1893 003d 06       		.uleb128 0x6
 1894 003e 2E       		.uleb128 0x2e
 1895 003f 00       		.byte	0
 1896 0040 3F       		.uleb128 0x3f
 1897 0041 19       		.uleb128 0x19
 1898 0042 03       		.uleb128 0x3
 1899 0043 0E       		.uleb128 0xe
 1900 0044 3A       		.uleb128 0x3a
 1901 0045 0B       		.uleb128 0xb
 1902 0046 3B       		.uleb128 0x3b
 1903 0047 0B       		.uleb128 0xb
 1904 0048 27       		.uleb128 0x27
 1905 0049 19       		.uleb128 0x19
 1906 004a 11       		.uleb128 0x11
 1907 004b 01       		.uleb128 0x1
 1908 004c 12       		.uleb128 0x12
 1909 004d 06       		.uleb128 0x6
 1910 004e 40       		.uleb128 0x40
 1911 004f 18       		.uleb128 0x18
 1912 0050 9742     		.uleb128 0x2117
 1913 0052 19       		.uleb128 0x19
 1914 0053 00       		.byte	0
 1915 0054 00       		.byte	0
 1916 0055 07       		.uleb128 0x7
 1917 0056 2E       		.uleb128 0x2e
 1918 0057 01       		.byte	0x1
 1919 0058 3F       		.uleb128 0x3f
 1920 0059 19       		.uleb128 0x19
 1921 005a 03       		.uleb128 0x3
 1922 005b 0E       		.uleb128 0xe
 1923 005c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 64


 1924 005d 0B       		.uleb128 0xb
 1925 005e 3B       		.uleb128 0x3b
 1926 005f 0B       		.uleb128 0xb
 1927 0060 27       		.uleb128 0x27
 1928 0061 19       		.uleb128 0x19
 1929 0062 11       		.uleb128 0x11
 1930 0063 01       		.uleb128 0x1
 1931 0064 12       		.uleb128 0x12
 1932 0065 06       		.uleb128 0x6
 1933 0066 40       		.uleb128 0x40
 1934 0067 18       		.uleb128 0x18
 1935 0068 9742     		.uleb128 0x2117
 1936 006a 19       		.uleb128 0x19
 1937 006b 01       		.uleb128 0x1
 1938 006c 13       		.uleb128 0x13
 1939 006d 00       		.byte	0
 1940 006e 00       		.byte	0
 1941 006f 08       		.uleb128 0x8
 1942 0070 34       		.uleb128 0x34
 1943 0071 00       		.byte	0
 1944 0072 03       		.uleb128 0x3
 1945 0073 0E       		.uleb128 0xe
 1946 0074 3A       		.uleb128 0x3a
 1947 0075 0B       		.uleb128 0xb
 1948 0076 3B       		.uleb128 0x3b
 1949 0077 0B       		.uleb128 0xb
 1950 0078 49       		.uleb128 0x49
 1951 0079 13       		.uleb128 0x13
 1952 007a 02       		.uleb128 0x2
 1953 007b 17       		.uleb128 0x17
 1954 007c 00       		.byte	0
 1955 007d 00       		.byte	0
 1956 007e 09       		.uleb128 0x9
 1957 007f 898201   		.uleb128 0x4109
 1958 0082 00       		.byte	0
 1959 0083 11       		.uleb128 0x11
 1960 0084 01       		.uleb128 0x1
 1961 0085 31       		.uleb128 0x31
 1962 0086 13       		.uleb128 0x13
 1963 0087 00       		.byte	0
 1964 0088 00       		.byte	0
 1965 0089 0A       		.uleb128 0xa
 1966 008a 898201   		.uleb128 0x4109
 1967 008d 01       		.byte	0x1
 1968 008e 11       		.uleb128 0x11
 1969 008f 01       		.uleb128 0x1
 1970 0090 31       		.uleb128 0x31
 1971 0091 13       		.uleb128 0x13
 1972 0092 00       		.byte	0
 1973 0093 00       		.byte	0
 1974 0094 0B       		.uleb128 0xb
 1975 0095 8A8201   		.uleb128 0x410a
 1976 0098 00       		.byte	0
 1977 0099 02       		.uleb128 0x2
 1978 009a 18       		.uleb128 0x18
 1979 009b 9142     		.uleb128 0x2111
 1980 009d 18       		.uleb128 0x18
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 65


 1981 009e 00       		.byte	0
 1982 009f 00       		.byte	0
 1983 00a0 0C       		.uleb128 0xc
 1984 00a1 2E       		.uleb128 0x2e
 1985 00a2 00       		.byte	0
 1986 00a3 3F       		.uleb128 0x3f
 1987 00a4 19       		.uleb128 0x19
 1988 00a5 03       		.uleb128 0x3
 1989 00a6 0E       		.uleb128 0xe
 1990 00a7 3A       		.uleb128 0x3a
 1991 00a8 0B       		.uleb128 0xb
 1992 00a9 3B       		.uleb128 0x3b
 1993 00aa 05       		.uleb128 0x5
 1994 00ab 27       		.uleb128 0x27
 1995 00ac 19       		.uleb128 0x19
 1996 00ad 49       		.uleb128 0x49
 1997 00ae 13       		.uleb128 0x13
 1998 00af 11       		.uleb128 0x11
 1999 00b0 01       		.uleb128 0x1
 2000 00b1 12       		.uleb128 0x12
 2001 00b2 06       		.uleb128 0x6
 2002 00b3 40       		.uleb128 0x40
 2003 00b4 18       		.uleb128 0x18
 2004 00b5 9742     		.uleb128 0x2117
 2005 00b7 19       		.uleb128 0x19
 2006 00b8 00       		.byte	0
 2007 00b9 00       		.byte	0
 2008 00ba 0D       		.uleb128 0xd
 2009 00bb 2E       		.uleb128 0x2e
 2010 00bc 01       		.byte	0x1
 2011 00bd 3F       		.uleb128 0x3f
 2012 00be 19       		.uleb128 0x19
 2013 00bf 03       		.uleb128 0x3
 2014 00c0 0E       		.uleb128 0xe
 2015 00c1 3A       		.uleb128 0x3a
 2016 00c2 0B       		.uleb128 0xb
 2017 00c3 3B       		.uleb128 0x3b
 2018 00c4 05       		.uleb128 0x5
 2019 00c5 27       		.uleb128 0x27
 2020 00c6 19       		.uleb128 0x19
 2021 00c7 11       		.uleb128 0x11
 2022 00c8 01       		.uleb128 0x1
 2023 00c9 12       		.uleb128 0x12
 2024 00ca 06       		.uleb128 0x6
 2025 00cb 40       		.uleb128 0x40
 2026 00cc 18       		.uleb128 0x18
 2027 00cd 9742     		.uleb128 0x2117
 2028 00cf 19       		.uleb128 0x19
 2029 00d0 01       		.uleb128 0x1
 2030 00d1 13       		.uleb128 0x13
 2031 00d2 00       		.byte	0
 2032 00d3 00       		.byte	0
 2033 00d4 0E       		.uleb128 0xe
 2034 00d5 05       		.uleb128 0x5
 2035 00d6 00       		.byte	0
 2036 00d7 03       		.uleb128 0x3
 2037 00d8 0E       		.uleb128 0xe
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 66


 2038 00d9 3A       		.uleb128 0x3a
 2039 00da 0B       		.uleb128 0xb
 2040 00db 3B       		.uleb128 0x3b
 2041 00dc 05       		.uleb128 0x5
 2042 00dd 49       		.uleb128 0x49
 2043 00de 13       		.uleb128 0x13
 2044 00df 02       		.uleb128 0x2
 2045 00e0 18       		.uleb128 0x18
 2046 00e1 00       		.byte	0
 2047 00e2 00       		.byte	0
 2048 00e3 0F       		.uleb128 0xf
 2049 00e4 2E       		.uleb128 0x2e
 2050 00e5 01       		.byte	0x1
 2051 00e6 3F       		.uleb128 0x3f
 2052 00e7 19       		.uleb128 0x19
 2053 00e8 03       		.uleb128 0x3
 2054 00e9 0E       		.uleb128 0xe
 2055 00ea 3A       		.uleb128 0x3a
 2056 00eb 0B       		.uleb128 0xb
 2057 00ec 3B       		.uleb128 0x3b
 2058 00ed 05       		.uleb128 0x5
 2059 00ee 27       		.uleb128 0x27
 2060 00ef 19       		.uleb128 0x19
 2061 00f0 49       		.uleb128 0x49
 2062 00f1 13       		.uleb128 0x13
 2063 00f2 11       		.uleb128 0x11
 2064 00f3 01       		.uleb128 0x1
 2065 00f4 12       		.uleb128 0x12
 2066 00f5 06       		.uleb128 0x6
 2067 00f6 40       		.uleb128 0x40
 2068 00f7 18       		.uleb128 0x18
 2069 00f8 9742     		.uleb128 0x2117
 2070 00fa 19       		.uleb128 0x19
 2071 00fb 01       		.uleb128 0x1
 2072 00fc 13       		.uleb128 0x13
 2073 00fd 00       		.byte	0
 2074 00fe 00       		.byte	0
 2075 00ff 10       		.uleb128 0x10
 2076 0100 34       		.uleb128 0x34
 2077 0101 00       		.byte	0
 2078 0102 03       		.uleb128 0x3
 2079 0103 0E       		.uleb128 0xe
 2080 0104 3A       		.uleb128 0x3a
 2081 0105 0B       		.uleb128 0xb
 2082 0106 3B       		.uleb128 0x3b
 2083 0107 05       		.uleb128 0x5
 2084 0108 49       		.uleb128 0x49
 2085 0109 13       		.uleb128 0x13
 2086 010a 02       		.uleb128 0x2
 2087 010b 18       		.uleb128 0x18
 2088 010c 00       		.byte	0
 2089 010d 00       		.byte	0
 2090 010e 11       		.uleb128 0x11
 2091 010f 34       		.uleb128 0x34
 2092 0110 00       		.byte	0
 2093 0111 03       		.uleb128 0x3
 2094 0112 0E       		.uleb128 0xe
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 67


 2095 0113 3A       		.uleb128 0x3a
 2096 0114 0B       		.uleb128 0xb
 2097 0115 3B       		.uleb128 0x3b
 2098 0116 05       		.uleb128 0x5
 2099 0117 49       		.uleb128 0x49
 2100 0118 13       		.uleb128 0x13
 2101 0119 02       		.uleb128 0x2
 2102 011a 17       		.uleb128 0x17
 2103 011b 00       		.byte	0
 2104 011c 00       		.byte	0
 2105 011d 12       		.uleb128 0x12
 2106 011e 05       		.uleb128 0x5
 2107 011f 00       		.byte	0
 2108 0120 03       		.uleb128 0x3
 2109 0121 0E       		.uleb128 0xe
 2110 0122 3A       		.uleb128 0x3a
 2111 0123 0B       		.uleb128 0xb
 2112 0124 3B       		.uleb128 0x3b
 2113 0125 05       		.uleb128 0x5
 2114 0126 49       		.uleb128 0x49
 2115 0127 13       		.uleb128 0x13
 2116 0128 02       		.uleb128 0x2
 2117 0129 17       		.uleb128 0x17
 2118 012a 00       		.byte	0
 2119 012b 00       		.byte	0
 2120 012c 13       		.uleb128 0x13
 2121 012d 0F       		.uleb128 0xf
 2122 012e 00       		.byte	0
 2123 012f 0B       		.uleb128 0xb
 2124 0130 0B       		.uleb128 0xb
 2125 0131 49       		.uleb128 0x49
 2126 0132 13       		.uleb128 0x13
 2127 0133 00       		.byte	0
 2128 0134 00       		.byte	0
 2129 0135 14       		.uleb128 0x14
 2130 0136 26       		.uleb128 0x26
 2131 0137 00       		.byte	0
 2132 0138 49       		.uleb128 0x49
 2133 0139 13       		.uleb128 0x13
 2134 013a 00       		.byte	0
 2135 013b 00       		.byte	0
 2136 013c 15       		.uleb128 0x15
 2137 013d 898201   		.uleb128 0x4109
 2138 0140 01       		.byte	0x1
 2139 0141 11       		.uleb128 0x11
 2140 0142 01       		.uleb128 0x1
 2141 0143 31       		.uleb128 0x31
 2142 0144 13       		.uleb128 0x13
 2143 0145 01       		.uleb128 0x1
 2144 0146 13       		.uleb128 0x13
 2145 0147 00       		.byte	0
 2146 0148 00       		.byte	0
 2147 0149 16       		.uleb128 0x16
 2148 014a 0B       		.uleb128 0xb
 2149 014b 01       		.byte	0x1
 2150 014c 11       		.uleb128 0x11
 2151 014d 01       		.uleb128 0x1
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 68


 2152 014e 12       		.uleb128 0x12
 2153 014f 06       		.uleb128 0x6
 2154 0150 00       		.byte	0
 2155 0151 00       		.byte	0
 2156 0152 17       		.uleb128 0x17
 2157 0153 34       		.uleb128 0x34
 2158 0154 00       		.byte	0
 2159 0155 03       		.uleb128 0x3
 2160 0156 0E       		.uleb128 0xe
 2161 0157 3A       		.uleb128 0x3a
 2162 0158 0B       		.uleb128 0xb
 2163 0159 3B       		.uleb128 0x3b
 2164 015a 0B       		.uleb128 0xb
 2165 015b 49       		.uleb128 0x49
 2166 015c 13       		.uleb128 0x13
 2167 015d 3F       		.uleb128 0x3f
 2168 015e 19       		.uleb128 0x19
 2169 015f 02       		.uleb128 0x2
 2170 0160 18       		.uleb128 0x18
 2171 0161 00       		.byte	0
 2172 0162 00       		.byte	0
 2173 0163 18       		.uleb128 0x18
 2174 0164 2E       		.uleb128 0x2e
 2175 0165 00       		.byte	0
 2176 0166 3F       		.uleb128 0x3f
 2177 0167 19       		.uleb128 0x19
 2178 0168 3C       		.uleb128 0x3c
 2179 0169 19       		.uleb128 0x19
 2180 016a 6E       		.uleb128 0x6e
 2181 016b 0E       		.uleb128 0xe
 2182 016c 03       		.uleb128 0x3
 2183 016d 0E       		.uleb128 0xe
 2184 016e 3A       		.uleb128 0x3a
 2185 016f 0B       		.uleb128 0xb
 2186 0170 3B       		.uleb128 0x3b
 2187 0171 0B       		.uleb128 0xb
 2188 0172 00       		.byte	0
 2189 0173 00       		.byte	0
 2190 0174 00       		.byte	0
 2191              		.section	.debug_loc,"",%progbits
 2192              	.Ldebug_loc0:
 2193              	.LLST0:
 2194 0000 08000000 		.4byte	.LVL1
 2195 0004 28000000 		.4byte	.LVL4
 2196 0008 0100     		.2byte	0x1
 2197 000a 54       		.byte	0x54
 2198 000b 00000000 		.4byte	0
 2199 000f 00000000 		.4byte	0
 2200              	.LLST1:
 2201 0013 08000000 		.4byte	.LVL8
 2202 0017 28000000 		.4byte	.LVL11
 2203 001b 0100     		.2byte	0x1
 2204 001d 54       		.byte	0x54
 2205 001e 00000000 		.4byte	0
 2206 0022 00000000 		.4byte	0
 2207              	.LLST2:
 2208 0026 04000000 		.4byte	.LVL15
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 69


 2209 002a 08000000 		.4byte	.LVL16
 2210 002e 0600     		.2byte	0x6
 2211 0030 70       		.byte	0x70
 2212 0031 00       		.sleb128 0
 2213 0032 08       		.byte	0x8
 2214 0033 7F       		.byte	0x7f
 2215 0034 1A       		.byte	0x1a
 2216 0035 9F       		.byte	0x9f
 2217 0036 00000000 		.4byte	0
 2218 003a 00000000 		.4byte	0
 2219              	.LLST3:
 2220 003e 00000000 		.4byte	.LVL17
 2221 0042 12000000 		.4byte	.LVL19
 2222 0046 0200     		.2byte	0x2
 2223 0048 30       		.byte	0x30
 2224 0049 9F       		.byte	0x9f
 2225 004a 12000000 		.4byte	.LVL19
 2226 004e 1A000000 		.4byte	.LVL20
 2227 0052 0100     		.2byte	0x1
 2228 0054 50       		.byte	0x50
 2229 0055 1A000000 		.4byte	.LVL20
 2230 0059 1E000000 		.4byte	.LVL21
 2231 005d 0200     		.2byte	0x2
 2232 005f 30       		.byte	0x30
 2233 0060 9F       		.byte	0x9f
 2234 0061 1E000000 		.4byte	.LVL21
 2235 0065 2C000000 		.4byte	.LFE9
 2236 0069 0100     		.2byte	0x1
 2237 006b 50       		.byte	0x50
 2238 006c 00000000 		.4byte	0
 2239 0070 00000000 		.4byte	0
 2240              	.LLST4:
 2241 0074 06000000 		.4byte	.LVL26
 2242 0078 1B000000 		.4byte	.LVL27-1
 2243 007c 0100     		.2byte	0x1
 2244 007e 50       		.byte	0x50
 2245 007f 00000000 		.4byte	0
 2246 0083 00000000 		.4byte	0
 2247              	.LLST5:
 2248 0087 00000000 		.4byte	.LVL34
 2249 008b 0A000000 		.4byte	.LVL36
 2250 008f 0100     		.2byte	0x1
 2251 0091 50       		.byte	0x50
 2252 0092 0A000000 		.4byte	.LVL36
 2253 0096 14000000 		.4byte	.LVL40
 2254 009a 0100     		.2byte	0x1
 2255 009c 55       		.byte	0x55
 2256 009d 14000000 		.4byte	.LVL40
 2257 00a1 18000000 		.4byte	.LVL41
 2258 00a5 0100     		.2byte	0x1
 2259 00a7 50       		.byte	0x50
 2260 00a8 18000000 		.4byte	.LVL41
 2261 00ac 20000000 		.4byte	.LVL42
 2262 00b0 0100     		.2byte	0x1
 2263 00b2 55       		.byte	0x55
 2264 00b3 20000000 		.4byte	.LVL42
 2265 00b7 24000000 		.4byte	.LFE20
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 70


 2266 00bb 0400     		.2byte	0x4
 2267 00bd F3       		.byte	0xf3
 2268 00be 01       		.uleb128 0x1
 2269 00bf 50       		.byte	0x50
 2270 00c0 9F       		.byte	0x9f
 2271 00c1 00000000 		.4byte	0
 2272 00c5 00000000 		.4byte	0
 2273              	.LLST6:
 2274 00c9 02000000 		.4byte	.LVL35
 2275 00cd 0A000000 		.4byte	.LVL36
 2276 00d1 0200     		.2byte	0x2
 2277 00d3 30       		.byte	0x30
 2278 00d4 9F       		.byte	0x9f
 2279 00d5 0A000000 		.4byte	.LVL36
 2280 00d9 10000000 		.4byte	.LVL38
 2281 00dd 0100     		.2byte	0x1
 2282 00df 54       		.byte	0x54
 2283 00e0 12000000 		.4byte	.LVL39
 2284 00e4 14000000 		.4byte	.LVL40
 2285 00e8 0100     		.2byte	0x1
 2286 00ea 54       		.byte	0x54
 2287 00eb 14000000 		.4byte	.LVL40
 2288 00ef 18000000 		.4byte	.LVL41
 2289 00f3 0200     		.2byte	0x2
 2290 00f5 30       		.byte	0x30
 2291 00f6 9F       		.byte	0x9f
 2292 00f7 18000000 		.4byte	.LVL41
 2293 00fb 20000000 		.4byte	.LVL42
 2294 00ff 0100     		.2byte	0x1
 2295 0101 54       		.byte	0x54
 2296 0102 00000000 		.4byte	0
 2297 0106 00000000 		.4byte	0
 2298              	.LLST7:
 2299 010a 00000000 		.4byte	.LVL43
 2300 010e 08000000 		.4byte	.LVL44
 2301 0112 0100     		.2byte	0x1
 2302 0114 50       		.byte	0x50
 2303 0115 08000000 		.4byte	.LVL44
 2304 0119 14000000 		.4byte	.LVL48
 2305 011d 0100     		.2byte	0x1
 2306 011f 56       		.byte	0x56
 2307 0120 14000000 		.4byte	.LVL48
 2308 0124 1C000000 		.4byte	.LVL49
 2309 0128 0100     		.2byte	0x1
 2310 012a 50       		.byte	0x50
 2311 012b 1C000000 		.4byte	.LVL49
 2312 012f 22000000 		.4byte	.LVL50
 2313 0133 0100     		.2byte	0x1
 2314 0135 56       		.byte	0x56
 2315 0136 22000000 		.4byte	.LVL50
 2316 013a 28000000 		.4byte	.LFE21
 2317 013e 0400     		.2byte	0x4
 2318 0140 F3       		.byte	0xf3
 2319 0141 01       		.uleb128 0x1
 2320 0142 50       		.byte	0x50
 2321 0143 9F       		.byte	0x9f
 2322 0144 00000000 		.4byte	0
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 71


 2323 0148 00000000 		.4byte	0
 2324              	.LLST8:
 2325 014c 00000000 		.4byte	.LVL43
 2326 0150 08000000 		.4byte	.LVL44
 2327 0154 0100     		.2byte	0x1
 2328 0156 51       		.byte	0x51
 2329 0157 08000000 		.4byte	.LVL44
 2330 015b 14000000 		.4byte	.LVL48
 2331 015f 0400     		.2byte	0x4
 2332 0161 F3       		.byte	0xf3
 2333 0162 01       		.uleb128 0x1
 2334 0163 51       		.byte	0x51
 2335 0164 9F       		.byte	0x9f
 2336 0165 14000000 		.4byte	.LVL48
 2337 0169 1C000000 		.4byte	.LVL49
 2338 016d 0100     		.2byte	0x1
 2339 016f 51       		.byte	0x51
 2340 0170 1C000000 		.4byte	.LVL49
 2341 0174 28000000 		.4byte	.LFE21
 2342 0178 0400     		.2byte	0x4
 2343 017a F3       		.byte	0xf3
 2344 017b 01       		.uleb128 0x1
 2345 017c 51       		.byte	0x51
 2346 017d 9F       		.byte	0x9f
 2347 017e 00000000 		.4byte	0
 2348 0182 00000000 		.4byte	0
 2349              	.LLST9:
 2350 0186 00000000 		.4byte	.LVL43
 2351 018a 08000000 		.4byte	.LVL44
 2352 018e 0200     		.2byte	0x2
 2353 0190 30       		.byte	0x30
 2354 0191 9F       		.byte	0x9f
 2355 0192 08000000 		.4byte	.LVL44
 2356 0196 10000000 		.4byte	.LVL46
 2357 019a 0100     		.2byte	0x1
 2358 019c 54       		.byte	0x54
 2359 019d 12000000 		.4byte	.LVL47
 2360 01a1 14000000 		.4byte	.LVL48
 2361 01a5 0100     		.2byte	0x1
 2362 01a7 54       		.byte	0x54
 2363 01a8 14000000 		.4byte	.LVL48
 2364 01ac 1C000000 		.4byte	.LVL49
 2365 01b0 0200     		.2byte	0x2
 2366 01b2 30       		.byte	0x30
 2367 01b3 9F       		.byte	0x9f
 2368 01b4 1C000000 		.4byte	.LVL49
 2369 01b8 22000000 		.4byte	.LVL50
 2370 01bc 0100     		.2byte	0x1
 2371 01be 54       		.byte	0x54
 2372 01bf 00000000 		.4byte	0
 2373 01c3 00000000 		.4byte	0
 2374              	.LLST10:
 2375 01c7 00000000 		.4byte	.LVL51
 2376 01cb 0B000000 		.4byte	.LVL52-1
 2377 01cf 0100     		.2byte	0x1
 2378 01d1 50       		.byte	0x50
 2379 01d2 0B000000 		.4byte	.LVL52-1
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 72


 2380 01d6 20000000 		.4byte	.LFE22
 2381 01da 0400     		.2byte	0x4
 2382 01dc F3       		.byte	0xf3
 2383 01dd 01       		.uleb128 0x1
 2384 01de 50       		.byte	0x50
 2385 01df 9F       		.byte	0x9f
 2386 01e0 00000000 		.4byte	0
 2387 01e4 00000000 		.4byte	0
 2388              	.LLST11:
 2389 01e8 06000000 		.4byte	.LVL55
 2390 01ec 1C000000 		.4byte	.LVL56
 2391 01f0 0100     		.2byte	0x1
 2392 01f2 53       		.byte	0x53
 2393 01f3 1C000000 		.4byte	.LVL56
 2394 01f7 24000000 		.4byte	.LFE23
 2395 01fb 0100     		.2byte	0x1
 2396 01fd 50       		.byte	0x50
 2397 01fe 00000000 		.4byte	0
 2398 0202 00000000 		.4byte	0
 2399              	.LLST12:
 2400 0206 06000000 		.4byte	.LVL57
 2401 020a 1B000000 		.4byte	.LVL58-1
 2402 020e 0100     		.2byte	0x1
 2403 0210 50       		.byte	0x50
 2404 0211 00000000 		.4byte	0
 2405 0215 00000000 		.4byte	0
 2406              	.LLST13:
 2407 0219 00000000 		.4byte	.LVL59
 2408 021d 13000000 		.4byte	.LVL60-1
 2409 0221 0100     		.2byte	0x1
 2410 0223 50       		.byte	0x50
 2411 0224 13000000 		.4byte	.LVL60-1
 2412 0228 56000000 		.4byte	.LVL68
 2413 022c 0400     		.2byte	0x4
 2414 022e F3       		.byte	0xf3
 2415 022f 01       		.uleb128 0x1
 2416 0230 50       		.byte	0x50
 2417 0231 9F       		.byte	0x9f
 2418 0232 56000000 		.4byte	.LVL68
 2419 0236 64000000 		.4byte	.LFE25
 2420 023a 0100     		.2byte	0x1
 2421 023c 50       		.byte	0x50
 2422 023d 00000000 		.4byte	0
 2423 0241 00000000 		.4byte	0
 2424              	.LLST14:
 2425 0245 28000000 		.4byte	.LVL62
 2426 0249 2E000000 		.4byte	.LVL63
 2427 024d 0100     		.2byte	0x1
 2428 024f 53       		.byte	0x53
 2429 0250 3A000000 		.4byte	.LVL64
 2430 0254 40000000 		.4byte	.LVL65
 2431 0258 0100     		.2byte	0x1
 2432 025a 53       		.byte	0x53
 2433 025b 00000000 		.4byte	0
 2434 025f 00000000 		.4byte	0
 2435              	.LLST15:
 2436 0263 00000000 		.4byte	.LVL69
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 73


 2437 0267 07000000 		.4byte	.LVL70-1
 2438 026b 0100     		.2byte	0x1
 2439 026d 50       		.byte	0x50
 2440 026e 07000000 		.4byte	.LVL70-1
 2441 0272 14000000 		.4byte	.LVL72
 2442 0276 0400     		.2byte	0x4
 2443 0278 F3       		.byte	0xf3
 2444 0279 01       		.uleb128 0x1
 2445 027a 50       		.byte	0x50
 2446 027b 9F       		.byte	0x9f
 2447 027c 14000000 		.4byte	.LVL72
 2448 0280 17000000 		.4byte	.LVL73-1
 2449 0284 0100     		.2byte	0x1
 2450 0286 50       		.byte	0x50
 2451 0287 17000000 		.4byte	.LVL73-1
 2452 028b 22000000 		.4byte	.LFE26
 2453 028f 0400     		.2byte	0x4
 2454 0291 F3       		.byte	0xf3
 2455 0292 01       		.uleb128 0x1
 2456 0293 50       		.byte	0x50
 2457 0294 9F       		.byte	0x9f
 2458 0295 00000000 		.4byte	0
 2459 0299 00000000 		.4byte	0
 2460              		.section	.debug_aranges,"",%progbits
 2461 0000 FC000000 		.4byte	0xfc
 2462 0004 0200     		.2byte	0x2
 2463 0006 00000000 		.4byte	.Ldebug_info0
 2464 000a 04       		.byte	0x4
 2465 000b 00       		.byte	0
 2466 000c 0000     		.2byte	0
 2467 000e 0000     		.2byte	0
 2468 0010 00000000 		.4byte	.LFB1
 2469 0014 14000000 		.4byte	.LFE1-.LFB1
 2470 0018 00000000 		.4byte	.LFB2
 2471 001c 2C000000 		.4byte	.LFE2-.LFB2
 2472 0020 00000000 		.4byte	.LFB0
 2473 0024 1C000000 		.4byte	.LFE0-.LFB0
 2474 0028 00000000 		.4byte	.LFB3
 2475 002c 30000000 		.4byte	.LFE3-.LFB3
 2476 0030 00000000 		.4byte	.LFB4
 2477 0034 0C000000 		.4byte	.LFE4-.LFB4
 2478 0038 00000000 		.4byte	.LFB5
 2479 003c 0C000000 		.4byte	.LFE5-.LFB5
 2480 0040 00000000 		.4byte	.LFB6
 2481 0044 0C000000 		.4byte	.LFE6-.LFB6
 2482 0048 00000000 		.4byte	.LFB7
 2483 004c 0C000000 		.4byte	.LFE7-.LFB7
 2484 0050 00000000 		.4byte	.LFB8
 2485 0054 10000000 		.4byte	.LFE8-.LFB8
 2486 0058 00000000 		.4byte	.LFB9
 2487 005c 2C000000 		.4byte	.LFE9-.LFB9
 2488 0060 00000000 		.4byte	.LFB10
 2489 0064 12000000 		.4byte	.LFE10-.LFB10
 2490 0068 00000000 		.4byte	.LFB11
 2491 006c 18000000 		.4byte	.LFE11-.LFB11
 2492 0070 00000000 		.4byte	.LFB12
 2493 0074 24000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 74


 2494 0078 00000000 		.4byte	.LFB13
 2495 007c 02000000 		.4byte	.LFE13-.LFB13
 2496 0080 00000000 		.4byte	.LFB14
 2497 0084 0C000000 		.4byte	.LFE14-.LFB14
 2498 0088 00000000 		.4byte	.LFB15
 2499 008c 0C000000 		.4byte	.LFE15-.LFB15
 2500 0090 00000000 		.4byte	.LFB16
 2501 0094 0C000000 		.4byte	.LFE16-.LFB16
 2502 0098 00000000 		.4byte	.LFB17
 2503 009c 14000000 		.4byte	.LFE17-.LFB17
 2504 00a0 00000000 		.4byte	.LFB18
 2505 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2506 00a8 00000000 		.4byte	.LFB19
 2507 00ac 18000000 		.4byte	.LFE19-.LFB19
 2508 00b0 00000000 		.4byte	.LFB20
 2509 00b4 24000000 		.4byte	.LFE20-.LFB20
 2510 00b8 00000000 		.4byte	.LFB21
 2511 00bc 28000000 		.4byte	.LFE21-.LFB21
 2512 00c0 00000000 		.4byte	.LFB22
 2513 00c4 20000000 		.4byte	.LFE22-.LFB22
 2514 00c8 00000000 		.4byte	.LFB23
 2515 00cc 24000000 		.4byte	.LFE23-.LFB23
 2516 00d0 00000000 		.4byte	.LFB24
 2517 00d4 24000000 		.4byte	.LFE24-.LFB24
 2518 00d8 00000000 		.4byte	.LFB25
 2519 00dc 64000000 		.4byte	.LFE25-.LFB25
 2520 00e0 00000000 		.4byte	.LFB26
 2521 00e4 22000000 		.4byte	.LFE26-.LFB26
 2522 00e8 00000000 		.4byte	.LFB27
 2523 00ec 1C000000 		.4byte	.LFE27-.LFB27
 2524 00f0 00000000 		.4byte	.LFB28
 2525 00f4 1C000000 		.4byte	.LFE28-.LFB28
 2526 00f8 00000000 		.4byte	0
 2527 00fc 00000000 		.4byte	0
 2528              		.section	.debug_ranges,"",%progbits
 2529              	.Ldebug_ranges0:
 2530 0000 00000000 		.4byte	.LFB1
 2531 0004 14000000 		.4byte	.LFE1
 2532 0008 00000000 		.4byte	.LFB2
 2533 000c 2C000000 		.4byte	.LFE2
 2534 0010 00000000 		.4byte	.LFB0
 2535 0014 1C000000 		.4byte	.LFE0
 2536 0018 00000000 		.4byte	.LFB3
 2537 001c 30000000 		.4byte	.LFE3
 2538 0020 00000000 		.4byte	.LFB4
 2539 0024 0C000000 		.4byte	.LFE4
 2540 0028 00000000 		.4byte	.LFB5
 2541 002c 0C000000 		.4byte	.LFE5
 2542 0030 00000000 		.4byte	.LFB6
 2543 0034 0C000000 		.4byte	.LFE6
 2544 0038 00000000 		.4byte	.LFB7
 2545 003c 0C000000 		.4byte	.LFE7
 2546 0040 00000000 		.4byte	.LFB8
 2547 0044 10000000 		.4byte	.LFE8
 2548 0048 00000000 		.4byte	.LFB9
 2549 004c 2C000000 		.4byte	.LFE9
 2550 0050 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 75


 2551 0054 12000000 		.4byte	.LFE10
 2552 0058 00000000 		.4byte	.LFB11
 2553 005c 18000000 		.4byte	.LFE11
 2554 0060 00000000 		.4byte	.LFB12
 2555 0064 24000000 		.4byte	.LFE12
 2556 0068 00000000 		.4byte	.LFB13
 2557 006c 02000000 		.4byte	.LFE13
 2558 0070 00000000 		.4byte	.LFB14
 2559 0074 0C000000 		.4byte	.LFE14
 2560 0078 00000000 		.4byte	.LFB15
 2561 007c 0C000000 		.4byte	.LFE15
 2562 0080 00000000 		.4byte	.LFB16
 2563 0084 0C000000 		.4byte	.LFE16
 2564 0088 00000000 		.4byte	.LFB17
 2565 008c 14000000 		.4byte	.LFE17
 2566 0090 00000000 		.4byte	.LFB18
 2567 0094 0C000000 		.4byte	.LFE18
 2568 0098 00000000 		.4byte	.LFB19
 2569 009c 18000000 		.4byte	.LFE19
 2570 00a0 00000000 		.4byte	.LFB20
 2571 00a4 24000000 		.4byte	.LFE20
 2572 00a8 00000000 		.4byte	.LFB21
 2573 00ac 28000000 		.4byte	.LFE21
 2574 00b0 00000000 		.4byte	.LFB22
 2575 00b4 20000000 		.4byte	.LFE22
 2576 00b8 00000000 		.4byte	.LFB23
 2577 00bc 24000000 		.4byte	.LFE23
 2578 00c0 00000000 		.4byte	.LFB24
 2579 00c4 24000000 		.4byte	.LFE24
 2580 00c8 00000000 		.4byte	.LFB25
 2581 00cc 64000000 		.4byte	.LFE25
 2582 00d0 00000000 		.4byte	.LFB26
 2583 00d4 22000000 		.4byte	.LFE26
 2584 00d8 00000000 		.4byte	.LFB27
 2585 00dc 1C000000 		.4byte	.LFE27
 2586 00e0 00000000 		.4byte	.LFB28
 2587 00e4 1C000000 		.4byte	.LFE28
 2588 00e8 00000000 		.4byte	0
 2589 00ec 00000000 		.4byte	0
 2590              		.section	.debug_line,"",%progbits
 2591              	.Ldebug_line0:
 2592 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 2592      02005F00 
 2592      00000201 
 2592      FB0E0D00 
 2592      01010101 
 2593              	.LASF10:
 2594 0000 75696E74 		.ascii	"uint16\000"
 2594      313600
 2595              	.LASF63:
 2596 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2596      69744372 
 2596      69746963 
 2596      616C5365 
 2596      6374696F 
 2597              	.LASF43:
 2598 001d 74784461 		.ascii	"txDataByte\000"
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 76


 2598      74614279 
 2598      746500
 2599              	.LASF48:
 2600 0028 73747269 		.ascii	"string\000"
 2600      6E6700
 2601              	.LASF7:
 2602 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2602      206C6F6E 
 2602      6720756E 
 2602      7369676E 
 2602      65642069 
 2603              	.LASF19:
 2604 0046 55415254 		.ascii	"UART_Start\000"
 2604      5F537461 
 2604      727400
 2605              	.LASF41:
 2606 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2606      5F536574 
 2606      5478496E 
 2606      74657272 
 2606      7570744D 
 2607              	.LASF6:
 2608 0069 6C6F6E67 		.ascii	"long long int\000"
 2608      206C6F6E 
 2608      6720696E 
 2608      7400
 2609              	.LASF0:
 2610 0077 7369676E 		.ascii	"signed char\000"
 2610      65642063 
 2610      68617200 
 2611              	.LASF4:
 2612 0083 6C6F6E67 		.ascii	"long int\000"
 2612      20696E74 
 2612      00
 2613              	.LASF46:
 2614 008c 55415254 		.ascii	"UART_PutChar\000"
 2614      5F507574 
 2614      43686172 
 2614      00
 2615              	.LASF27:
 2616 0099 55415254 		.ascii	"UART_ReadRxData\000"
 2616      5F526561 
 2616      64527844 
 2616      61746100 
 2617              	.LASF9:
 2618 00a9 75696E74 		.ascii	"uint8\000"
 2618      3800
 2619              	.LASF44:
 2620 00af 55415254 		.ascii	"UART_ReadControlRegister\000"
 2620      5F526561 
 2620      64436F6E 
 2620      74726F6C 
 2620      52656769 
 2621              	.LASF12:
 2622 00c8 646F7562 		.ascii	"double\000"
 2622      6C6500
 2623              	.LASF37:
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 77


 2624 00cf 61646472 		.ascii	"addressMode\000"
 2624      6573734D 
 2624      6F646500 
 2625              	.LASF24:
 2626 00db 636F6E74 		.ascii	"control\000"
 2626      726F6C00 
 2627              	.LASF68:
 2628 00e3 55415254 		.ascii	"UART_Init\000"
 2628      5F496E69 
 2628      7400
 2629              	.LASF56:
 2630 00ed 7265744D 		.ascii	"retMode\000"
 2630      6F646500 
 2631              	.LASF32:
 2632 00f5 55415254 		.ascii	"UART_GetByte\000"
 2632      5F476574 
 2632      42797465 
 2632      00
 2633              	.LASF8:
 2634 0102 756E7369 		.ascii	"unsigned int\000"
 2634      676E6564 
 2634      20696E74 
 2634      00
 2635              	.LASF54:
 2636 010f 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2636      5F436C65 
 2636      61725478 
 2636      42756666 
 2636      657200
 2637              	.LASF52:
 2638 0122 55415254 		.ascii	"UART_PutCRLF\000"
 2638      5F507574 
 2638      43524C46 
 2638      00
 2639              	.LASF5:
 2640 012f 6C6F6E67 		.ascii	"long unsigned int\000"
 2640      20756E73 
 2640      69676E65 
 2640      6420696E 
 2640      7400
 2641              	.LASF50:
 2642 0141 55415254 		.ascii	"UART_PutArray\000"
 2642      5F507574 
 2642      41727261 
 2642      7900
 2643              	.LASF61:
 2644 014f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2644      74657243 
 2644      72697469 
 2644      63616C53 
 2644      65637469 
 2645              	.LASF34:
 2646 0166 73697A65 		.ascii	"size\000"
 2646      00
 2647              	.LASF3:
 2648 016b 73686F72 		.ascii	"short unsigned int\000"
 2648      7420756E 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 78


 2648      7369676E 
 2648      65642069 
 2648      6E7400
 2649              	.LASF49:
 2650 017e 62756649 		.ascii	"bufIndex\000"
 2650      6E646578 
 2650      00
 2651              	.LASF25:
 2652 0187 696E7453 		.ascii	"intSrc\000"
 2652      726300
 2653              	.LASF58:
 2654 018e 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2654      5F536574 
 2654      54784164 
 2654      64726573 
 2654      734D6F64 
 2655              	.LASF45:
 2656 01a4 55415254 		.ascii	"UART_ReadTxStatus\000"
 2656      5F526561 
 2656      64547853 
 2656      74617475 
 2656      7300
 2657              	.LASF62:
 2658 01b6 55415254 		.ascii	"UART_IntClock_Start\000"
 2658      5F496E74 
 2658      436C6F63 
 2658      6B5F5374 
 2658      61727400 
 2659              	.LASF57:
 2660 01ca 746D7053 		.ascii	"tmpStat\000"
 2660      74617400 
 2661              	.LASF17:
 2662 01d2 73697A65 		.ascii	"sizetype\000"
 2662      74797065 
 2662      00
 2663              	.LASF16:
 2664 01db 6C6F6E67 		.ascii	"long double\000"
 2664      20646F75 
 2664      626C6500 
 2665              	.LASF39:
 2666 01e7 61646472 		.ascii	"address\000"
 2666      65737300 
 2667              	.LASF38:
 2668 01ef 55415254 		.ascii	"UART_SetRxAddress1\000"
 2668      5F536574 
 2668      52784164 
 2668      64726573 
 2668      733100
 2669              	.LASF40:
 2670 0202 55415254 		.ascii	"UART_SetRxAddress2\000"
 2670      5F536574 
 2670      52784164 
 2670      64726573 
 2670      733200
 2671              	.LASF31:
 2672 0215 72785374 		.ascii	"rxStatus\000"
 2672      61747573 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 79


 2672      00
 2673              	.LASF64:
 2674 021e 55415254 		.ascii	"UART_IntClock_Stop\000"
 2674      5F496E74 
 2674      436C6F63 
 2674      6B5F5374 
 2674      6F7000
 2675              	.LASF66:
 2676 0231 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 2676      72617465 
 2676      645F536F 
 2676      75726365 
 2676      5C50536F 
 2677              	.LASF53:
 2678 024f 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2678      5F476574 
 2678      54784275 
 2678      66666572 
 2678      53697A65 
 2679              	.LASF15:
 2680 0264 72656738 		.ascii	"reg8\000"
 2680      00
 2681              	.LASF36:
 2682 0269 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2682      5F536574 
 2682      52784164 
 2682      64726573 
 2682      734D6F64 
 2683              	.LASF1:
 2684 027f 756E7369 		.ascii	"unsigned char\000"
 2684      676E6564 
 2684      20636861 
 2684      7200
 2685              	.LASF42:
 2686 028d 55415254 		.ascii	"UART_WriteTxData\000"
 2686      5F577269 
 2686      74655478 
 2686      44617461 
 2686      00
 2687              	.LASF2:
 2688 029e 73686F72 		.ascii	"short int\000"
 2688      7420696E 
 2688      7400
 2689              	.LASF55:
 2690 02a8 55415254 		.ascii	"UART_SendBreak\000"
 2690      5F53656E 
 2690      64427265 
 2690      616B00
 2691              	.LASF65:
 2692 02b7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2692      43313120 
 2692      352E342E 
 2692      31203230 
 2692      31363036 
 2693 02ea 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2693      20726576 
 2693      6973696F 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 80


 2693      6E203233 
 2693      37373135 
 2694 031d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2694      66756E63 
 2694      74696F6E 
 2694      2D736563 
 2694      74696F6E 
 2695              	.LASF51:
 2696 0345 62797465 		.ascii	"byteCount\000"
 2696      436F756E 
 2696      7400
 2697              	.LASF67:
 2698 034f 453A5C43 		.ascii	"E:\\Cypress\\Projects\\RheaWorkspace\\Rhea.cydsn\000"
 2698      79707265 
 2698      73735C50 
 2698      726F6A65 
 2698      6374735C 
 2699              	.LASF26:
 2700 037c 72784461 		.ascii	"rxData\000"
 2700      746100
 2701              	.LASF18:
 2702 0383 55415254 		.ascii	"UART_Enable\000"
 2702      5F456E61 
 2702      626C6500 
 2703              	.LASF59:
 2704 038f 55415254 		.ascii	"UART_LoadRxConfig\000"
 2704      5F4C6F61 
 2704      64527843 
 2704      6F6E6669 
 2704      6700
 2705              	.LASF28:
 2706 03a1 55415254 		.ascii	"UART_ReadRxStatus\000"
 2706      5F526561 
 2706      64527853 
 2706      74617475 
 2706      7300
 2707              	.LASF14:
 2708 03b3 63686172 		.ascii	"char\000"
 2708      00
 2709              	.LASF13:
 2710 03b8 63686172 		.ascii	"char8\000"
 2710      3800
 2711              	.LASF23:
 2712 03be 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2712      5F536574 
 2712      5278496E 
 2712      74657272 
 2712      7570744D 
 2713              	.LASF30:
 2714 03d6 55415254 		.ascii	"UART_GetChar\000"
 2714      5F476574 
 2714      43686172 
 2714      00
 2715              	.LASF60:
 2716 03e3 55415254 		.ascii	"UART_LoadTxConfig\000"
 2716      5F4C6F61 
 2716      64547843 
ARM GAS  C:\Users\GYULAI~1\AppData\Local\Temp\ccdn5mid.s 			page 81


 2716      6F6E6669 
 2716      6700
 2717              	.LASF21:
 2718 03f5 656E6162 		.ascii	"enableInterrupts\000"
 2718      6C65496E 
 2718      74657272 
 2718      75707473 
 2718      00
 2719              	.LASF69:
 2720 0406 55415254 		.ascii	"UART_initVar\000"
 2720      5F696E69 
 2720      74566172 
 2720      00
 2721              	.LASF33:
 2722 0413 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2722      5F476574 
 2722      52784275 
 2722      66666572 
 2722      53697A65 
 2723              	.LASF29:
 2724 0428 73746174 		.ascii	"status\000"
 2724      757300
 2725              	.LASF20:
 2726 042f 55415254 		.ascii	"UART_Stop\000"
 2726      5F53746F 
 2726      7000
 2727              	.LASF11:
 2728 0439 666C6F61 		.ascii	"float\000"
 2728      7400
 2729              	.LASF47:
 2730 043f 55415254 		.ascii	"UART_PutString\000"
 2730      5F507574 
 2730      53747269 
 2730      6E6700
 2731              	.LASF22:
 2732 044e 55415254 		.ascii	"UART_WriteControlRegister\000"
 2732      5F577269 
 2732      7465436F 
 2732      6E74726F 
 2732      6C526567 
 2733              	.LASF35:
 2734 0468 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2734      5F436C65 
 2734      61725278 
 2734      42756666 
 2734      657200
 2735              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
